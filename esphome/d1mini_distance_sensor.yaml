substitutions:
  board_name: d1mini_distance_sensor
  node_name: d1mini-distance-sensor
  
esphome:
  name: ${node_name}
  comment: "D1 Mini Toilet Distance Sensor"
  friendly_name: "D1 Mini Toilet Distance Sensor"
  area: "Toilet"

safe_mode:
  disabled: False
  num_attempts: 5
  reboot_timeout: 15min

esp8266:
  board: d1_mini
  restore_from_flash: true

wifi:
  ssid: !secret wifi_ssid_iot
  password: !secret wifi_pass
  domain: !secret my_domain
  reboot_timeout: 15min
  #output_power: 17.5dB
  fast_connect: true
  #power_save_mode: none
  # manual_ip:
  #   static_ip: 192.168.1.113
  #   gateway: 192.168.1.1
  #   subnet: 255.255.255.0
  #   dns1: 192.168.1.1
  #   dns2: 8.8.8.8

logger:
  baud_rate: 0
  
api:
  reboot_timeout: 0s

ota:
  - platform: esphome
  
web_server:
  port: 80

i2c:
  sda: GPIO04
  scl: GPIO05
  scan: True

binary_sensor:
  - platform: status
    name: "Status"

  - platform: template
    name: "Occupancy"
    device_class: occupancy
    icon: mdi:account-eye
    id: occupancy_binary
    # filters:
    #   - delayed_on_off: 10s
    lambda: |-
      if ((id(id_distance).state > 0.1) && (id(id_distance).state < 1.8)) {
        return true;
      } else {
        return false;
      }

  - platform: gpio
    pin: 
      number: GPIO14
      mode:
        input: true
        pullup: true    
    name: "Radar"
    device_class: occupancy

text_sensor:
  - platform: template
    name: "Uptime"
    lambda: |-
        int seconds = round(id(uptime_sensor).raw_state);
        int days = seconds / (24 * 3600);
        seconds = seconds % (24 * 3600);
        int hours = seconds / 3600;
        seconds = seconds % 3600;
        int minutes = seconds /  60;
        seconds = seconds % 60;
        return (
          (days ? to_string(days) + "d " : "00d ") +
          (hours ? to_string(hours) + "h " : "00h ") +
          (minutes ? to_string(minutes) + "m " : "00m ") +
          (to_string(seconds) + "s")
        );
    icon: mdi:clock-start
    update_interval: 15s

  - platform: wifi_info
    ip_address:
      name: "IP"
    ssid:
      name: "SSID"
    bssid:
      name: "BSSID"
    mac_address:
      name: "MAC"
    # scan_results:
    #   name: "Latest Scan Results"

  - platform: version
    name: "ESPHome Version"
    hide_timestamp: true

  - platform: template
    name: ${board_name}_Occupancy_Text
    icon: mdi:account-search
    id: occupancy_text
    lambda: |-
      if ( id(id_distance).state > 0.1  && id(id_distance).state <= 0.7 ) {
        return {"Sitting"};
      } 
      if ( id(id_distance).state > 0.7  && id(id_distance).state <= 1.5 ) {
      return {"Standing"}; 
      } 
      else 
      {
      return {"NA"};
      }

sensor:
  - platform: uptime
    name: "Uptime s"
    id: uptime_sensor
    update_interval: 15s
    disabled_by_default: true

  - platform: wifi_signal
    name: "WiFi RSSI"
    update_interval: 60s

  - platform: vl53l0x
    name: "Distance"
    address: 0x29
    update_interval: 5s
    long_range: true
    id: id_distance
    on_value:
      then:
        - component.update: occupancy_text

button:
  - platform: restart
    name: "Restart"

time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Moscow
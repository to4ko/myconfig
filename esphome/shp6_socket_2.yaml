substitutions:
  board_name: shp6_socket_2
  host_name: shp6-socket-2
  current_res: '0.00290'
  voltage_div: '760'
  max_power: "2300"

  
esphome:
  name: ${host_name}
  comment: Treadmill Plug SHP6_2
  friendly_name: "Treadmill Plug SHP6_2"
  area: "MAster Bedroom"  
  on_boot:
    priority: -10
    then:
    # on affter boot
    - switch.turn_on: relay

safe_mode:
  disabled: False
  num_attempts: 5
  reboot_timeout: 15min

esp8266:
  board: esp8285
    
wifi:
  ssid: !secret wifi_ssid_iot
  password: !secret wifi_pass
  domain: !secret my_domain
  reboot_timeout: 15min
  #output_power: 17.5dB
  fast_connect: true
  #use_address: 192.168.1.128
  #power_save_mode: none
  # manual_ip:
  #   static_ip: 192.168.1.128
  #   gateway: 192.168.1.1
  #   subnet: 255.255.255.0
  #   dns1: 192.168.1.1
  #   dns2: 8.8.8.8

logger:
  baud_rate: 0
  esp8266_store_log_strings_in_flash: false

api:
  reboot_timeout: 0s

ota:
  - platform: esphome

web_server:
  port: 80

binary_sensor:
  - platform: status
    name: ${board_name}_Status
    
  - platform: gpio
    pin:
      number: GPIO13
      inverted: True
    name: "${board_name}_button"
    on_press:
      - switch.toggle: relay

output:
  - platform: gpio
    pin: GPIO00
    inverted: True
    id: led1

status_led:
  pin:
    number: GPIO02
    inverted: True

switch:
  - platform: gpio
    pin: GPIO15
    restore_mode: RESTORE_DEFAULT_OFF
    icon: mdi:power-socket-eu
    id: relay
    name: "${board_name} Relay"
    on_turn_on:
      - output.turn_on: led1
    on_turn_off:
      - output.turn_off: led1

sensor:
  - platform: hlw8012
    sel_pin:
      number: GPIO12
      inverted: True
    cf_pin: GPIO05
    cf1_pin: GPIO04
    current_resistor: ${current_res}
    voltage_divider: ${voltage_div}
    current:
      name: ${board_name}_A
      unit_of_measurement: A
      accuracy_decimals: 3
      device_class: current
    voltage:
      name: ${board_name}_V
      unit_of_measurement: V
      device_class: voltage
    power:
      name: ${board_name}_W
      unit_of_measurement: W
      device_class: power
      id: id_power
      on_value_range:
        - above: ${max_power}
          then:
            - output.turn_off: led1
            - switch.turn_off: relay
    energy:
      name: ${board_name}_E
      unit_of_measurement: kWh
      device_class: energy
      filters:
        - multiply: 0.001
    change_mode_every: 4
    update_interval: 10s
   
  - platform: uptime
    name: ${board_name}_Uptime_s
    icon: mdi:clock-outline
    id: uptime_sensor

  - platform: wifi_signal
    name: ${board_name}_WiFi_RSSI
    update_interval: 60s

text_sensor:
  - platform: template
    name: ${board_name}_Uptime
    lambda: |-
        int seconds = round(id(uptime_sensor).raw_state);
        int days = seconds / (24 * 3600);
        seconds = seconds % (24 * 3600);
        int hours = seconds / 3600;
        seconds = seconds % 3600;
        int minutes = seconds /  60;
        seconds = seconds % 60;
        return (
          (days ? to_string(days) + "d " : "00d ") +
          (hours ? to_string(hours) + "h " : "00h ") +
          (minutes ? to_string(minutes) + "m " : "00m ") +
          (to_string(seconds) + "s")
        );
    icon: mdi:clock-start
    update_interval: 15s

  - platform: wifi_info
    ip_address:
      name: ${board_name}_IP
    ssid:
      name: ${board_name}_SSID
    bssid:
      name: ${board_name}_BSSID
    mac_address:
      name: ${board_name}_Mac
    # scan_results:
    #   name: ${board_name}_Latest_Scan_Results

  - platform: version
    name: ${board_name}_ESPHome_Version
    hide_timestamp: true

button:
  - platform: restart
    name: ${board_name}_Restart
    
time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Moscow
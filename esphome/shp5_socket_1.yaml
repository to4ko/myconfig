substitutions:
  board_name: shp5_socket_1
  node_name: shp5-socket-1

esphome:
  name: ${node_name}
  comment: "220 and USB Socket"
  friendly_name: "SHP5 Socket 1"
  area: "Master Bedroom"    
  on_boot:
    priority: -10
    then:
    # on affter boot
    - switch.turn_on: relay_220

safe_mode:
  disabled: False
  num_attempts: 5
  reboot_timeout: 15min

esp8266:
  board: esp8285

wifi:
  ssid: !secret wifi_ssid_iot
  password: !secret wifi_pass
  domain: !secret my_domain
  #use_address: 192.168.200.69
  reboot_timeout: 15min
  fast_connect: true
  # manual_ip:
  #   static_ip: 192.168.1.135
  #   gateway: 192.168.1.1
  #   subnet: 255.255.255.0
  #   dns1: 192.168.1.1
  #   dns2: 8.8.8.8

uart:
  tx_pin: GPIO01
  rx_pin: GPIO03
  baud_rate: 4800
  parity: EVEN

logger:
  baud_rate: 0
  esp8266_store_log_strings_in_flash: false

api:
  reboot_timeout: 0s

ota:
  - platform: esphome

web_server:
  port: 80

binary_sensor:
  - platform: status
    name: "Status"
    
  - platform: gpio
    name: "Button"
    pin:
      number: GPIO16
      #mode: INPUT_PULLUP
      inverted: True
    on_press:
      - switch.toggle: relay_220
    on_double_click:
      min_length: 50ms
      max_length: 350ms
      then:
      - switch.toggle: relay_usb

output:
  - platform: gpio
    pin: GPIO00
    inverted: true
    id: red_led

status_led:
  pin:
    number: GPIO02
    inverted: true

switch:
  - platform: gpio
    name: ${board_name}_220_Relay
    pin: GPIO14
    id: relay_220
    restore_mode: ALWAYS_ON 
    on_turn_on:
      - output.turn_on: red_led
    on_turn_off:
      - output.turn_off: red_led
      
  - platform: gpio
    name: ${board_name}_USB_relay
    pin: GPIO05
    id: relay_usb
    restore_mode: ALWAYS_ON 

sensor:
  - platform: cse7766
    current:
      name: ${board_name}_Amperage
      device_class: current
      accuracy_decimals: 3
      filters:
        - throttle_average: 10s
    voltage:
      name: "Voltage"
      device_class: voltage
      filters:
        - multiply: 1.92
        - throttle_average: 10s
    power:
      name: "Power"
      device_class: power
      filters:
        - multiply: 2.14
        - throttle_average: 10s
    energy:
      name: "Energy"
      filters:
        - throttle_average: 10s


  - platform: uptime
    name: "Uptime s"
    icon: mdi:clock-outline
    id: uptime_sensor

  - platform: wifi_signal
    name: "WiFi RSSI"
    update_interval: 60s

text_sensor:
  - platform: template
    name: "Uptime"
    lambda: |-
        int seconds = round(id(uptime_sensor).raw_state);
        int days = seconds / (24 * 3600);
        seconds = seconds % (24 * 3600);
        int hours = seconds / 3600;
        seconds = seconds % 3600;
        int minutes = seconds /  60;
        seconds = seconds % 60;
        return (
          (days ? to_string(days) + "d " : "00d ") +
          (hours ? to_string(hours) + "h " : "00h ") +
          (minutes ? to_string(minutes) + "m " : "00m ") +
          (to_string(seconds) + "s")
        );
    icon: mdi:clock-start
    update_interval: 15s

  - platform: wifi_info
    ip_address:
      name: "IP"
    ssid:
      name: "SSID"
    bssid:
      name: "BSSID"
    mac_address:
      name: "MAC"
    # scan_results:
    #   name: "Latest Scan Results"

  - platform: version
    name: "ESPHome Version"
    hide_timestamp: true

button:
  - platform: restart
    name: "Restart"
    
time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Moscow
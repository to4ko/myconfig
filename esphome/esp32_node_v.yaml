substitutions:
  board_name: esp32_node_v
  node_name: esp32-node-v
 
esphome:
  name: ${node_name}
  comment: ESP32 CO2 TPH Node V
  on_boot:
    priority: 800
    then:
      - switch.turn_on: id_abc_calibration

safe_mode:
  disabled: False
  num_attempts: 5
  reboot_timeout: 15min

esp32:
  board: nodemcu-32s
  framework:
    type: esp-idf

wifi:
  ssid: !secret wifi_ssid_iot
  password: !secret wifi_pass
  domain: !secret my_domain
  reboot_timeout: 15min
  #output_power: 17.5dB
  #fast_connect: true
  #power_save_mode: none
  # manual_ip:
  #   static_ip: 192.168.1.105
  #   gateway: 192.168.1.1
  #   subnet: 255.255.255.0
  #   dns1: 192.168.1.1
  #   dns2: 8.8.8.8

logger:
  baud_rate: 0
  
api:
  reboot_timeout: 5min

ota:
  - platform: esphome

web_server:
  port: 80
  
binary_sensor:
  - platform: status
    name: ${board_name}_Status
    
uart:
  rx_pin: GPIO03
  tx_pin: GPIO01
  baud_rate: 9600

one_wire:
  - platform: gpio
    pin: GPIO26
    id: dallas_node

i2c:
  sda: GPIO21
  scl: GPIO22
  scan: True

text_sensor:
  - platform: template
    name: ${board_name}_Uptime
    lambda: |-
        int seconds = round(id(uptime_sensor).raw_state);
        int days = seconds / (24 * 3600);
        seconds = seconds % (24 * 3600);
        int hours = seconds / 3600;
        seconds = seconds % 3600;
        int minutes = seconds /  60;
        seconds = seconds % 60;
        return (
          (days ? to_string(days) + "d " : "00d ") +
          (hours ? to_string(hours) + "h " : "00h ") +
          (minutes ? to_string(minutes) + "m " : "00m ") +
          (to_string(seconds) + "s")
        );
    icon: mdi:clock-start
    update_interval: 15s
  
  - platform: wifi_info
    ip_address:
      name: ${board_name}_IP
    ssid:
      name: ${board_name}_SSID
    bssid:
      name: ${board_name}_BSSID
    mac_address:
      name: ${board_name}_Mac
    # scan_results:
    #   name: ${board_name}_Latest_Scan_Results

  - platform: version
    name: ${board_name}_ESPHome_Version
    hide_timestamp: true

sensor:
  - platform: uptime
    name: ${board_name}_Uptime_s
    id: uptime_sensor
    update_interval: 15s

  - platform: dallas_temp
    address: 0x0101143E424CAA28
    name: ${board_name}_Heating_Pipe
    # accuracy_decimals: 2
    # resolution: 12

  # - platform: mhz19
  #   co2:
  #     name: "Z19 CO2 V"
  #   temperature:
  #     name: "Z19 Temp V"
  #   update_interval: 60s
  #   id: my_mhz19_id
  #   automatic_baseline_calibration: false
  
  - platform: senseair
    co2:
      name: ${board_name}_CO2
    update_interval: 60s
    id: id_my_co2
  
  - platform: bme280_i2c
    temperature:
      name: ${board_name}_Temperature
      oversampling: 16x
      id: bme280_temperature
    pressure:
      name: ${board_name}_Pressure
      id: bme280_pressure
    humidity:
      name: ${board_name}_Humidity
      id: bme280_humidity
      filters:
        - offset: 4.0      
    address: 0x76
    update_interval: 30s

  - platform: bh1750
    name: ${board_name}_Illuminance
    address: 0x23
    #measurement_duration: 254
    update_interval: 15s
    accuracy_decimals: 0
    
  - platform: wifi_signal
    name: ${board_name}_WiFi_RSSI
    update_interval: 60s
    
button:
  - platform: restart
    name: ${board_name}_Restart

  - platform: template
    name: ${board_name}_CO2_Calibrate
    on_press:
      - senseair.background_calibration: id_my_co2

switch:
  - platform: template
    name: ${board_name}_ABC
    id: id_abc_calibration
    restore_mode: RESTORE_DEFAULT_OFF
    optimistic: true
    on_turn_on:
      - senseair.abc_enable: id_my_co2
    on_turn_off:
      - senseair.abc_disable: id_my_co2

time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Moscow
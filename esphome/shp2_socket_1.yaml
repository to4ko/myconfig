substitutions:
  board_name: shp2_socket_1
  node_name: shp2-socket-1
  current_res: "0.00221"
  voltage_div: "945"

esphome:
  name: ${node_name}
  comment: "SHP2 Socket 1"
  friendly_name: "SHP2 Socket 1"
  area: "Master Bedroom"  
  #comment: MQTT Host
  on_boot:
    priority: -10
    then:
      - switch.turn_on: relay

safe_mode:
  disabled: False
  num_attempts: 5
  reboot_timeout: 15min

esp8266:
  board: esp8285

wifi:
  ssid: !secret wifi_ssid_iot
  password: !secret wifi_pass
  domain: !secret my_domain
  reboot_timeout: 15min
  #output_power: 17.5dB
  #fast_connect: true
  #power_save_mode: none
  # manual_ip:
  #   static_ip: 192.168.1.124
  #   gateway: 192.168.1.1
  #   subnet: 255.255.255.0
  #   dns1: 192.168.1.1
  #   dns2: 8.8.8.8

logger:
  baud_rate: 0
  esp8266_store_log_strings_in_flash: false

api:
  reboot_timeout: 0s

ota:
  - platform: esphome

web_server:
  port: 80

binary_sensor:
  - platform: status
    name: "Status"
    
  - platform: gpio
    name: "Button"
    pin:
      number: GPIO3
      mode: INPUT_PULLUP
      inverted: True
    on_press:
      - switch.toggle: relay

switch:
  - platform: gpio
    name: "Relay"
    pin: GPIO14
    id: relay
    restore_mode: ALWAYS_ON
    on_turn_on:
      - switch.turn_on: blue_led
      - switch.turn_off: red_led
    on_turn_off:
      - switch.turn_off: blue_led
      - switch.turn_on: red_led

  - platform: gpio
    id: blue_led
    name: "LED Blue"
    icon: mdi:led-on
    restore_mode: ALWAYS_ON
    pin: 
      number: GPIO1
      inverted: True

  - platform: gpio
    id: red_led
    name: "LED Red"
    icon: mdi:led-on
    restore_mode: ALWAYS_OFF
    pin: 
      number: GPIO13
      inverted: True

sensor:
  - platform: hlw8012
    sel_pin: 
      number: GPIO12
      inverted: True
    cf_pin: GPIO04
    cf1_pin: GPIO05
    current_resistor: ${current_res}
    voltage_divider: ${voltage_div}
    current:
      name: "Current"
      unit_of_measurement: A
      device_class: current
    voltage:
      name: "Voltage"
      unit_of_measurement: V
      device_class: voltage
    power:
      name: "Power"
      unit_of_measurement: W
      device_class: power
    energy:
      name: "Energy"
      unit_of_measurement: kWh
      device_class: energy
      filters:
        - multiply: 0.001
    change_mode_every: 3
    update_interval: 10s
 
  - platform: uptime
    name: "Uptime s"
    id: uptime_sensor

  - platform: wifi_signal
    name: "WiFi RSSI"
    update_interval: 60s

text_sensor:
  - platform: template
    name: "Uptime"
    lambda: |-
        int seconds = round(id(uptime_sensor).raw_state);
        int days = seconds / (24 * 3600);
        seconds = seconds % (24 * 3600);
        int hours = seconds / 3600;
        seconds = seconds % 3600;
        int minutes = seconds /  60;
        seconds = seconds % 60;
        return (
          (days ? to_string(days) + "d " : "00d ") +
          (hours ? to_string(hours) + "h " : "00h ") +
          (minutes ? to_string(minutes) + "m " : "00m ") +
          (to_string(seconds) + "s")
        );
    icon: mdi:clock-start
    update_interval: 15s

  - platform: wifi_info
    ip_address:
      name: "IP"
    ssid:
      name: "SSID"
    bssid:
      name: "BSSID"
    mac_address:
      name: "MAC"
    # scan_results:
    #   name: "Latest Scan Results"

  - platform: version
    name: "ESPHome Version"
    hide_timestamp: true

button:
  - platform: restart
    name: "Restart"
    
time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Moscow
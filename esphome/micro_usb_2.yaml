substitutions:
  board_name: micro_usb_2
  node_name: micro-usb-2
  
esphome:
  name: ${node_name}
  comment: Micro USB Switch 2 - Night Light S
  # on_boot:
  #   then:
  #   - sensor.template.publish:
  #       id: id_new_canister_sensor
  #       state: !lambda 'return id(id_canister_replace);'
  #   - text_sensor.template.publish:
  #       id: id_new_canister_time_text
  #       state: !lambda |-
  #                   char str[30];
  #                   time_t currTime = id(id_canister_replace);
  #                   strftime(str, sizeof(str), "%Y-%m-%d %H:%M", localtime(&currTime));
  #                   return  { str };
  #   - component.update: id_refill_remaining
  #   - component.update: id_days_in_use
      
bk72xx:
  board: generic-bk7231n-qfn32-tuya

wifi:
  ssid: !secret wifi_ssid_iot
  password: !secret wifi_pass
  #domain: .local
  reboot_timeout: 15min
  #fast_connect: true
  #output_power: 17.5dB
  #power_save_mode: none
  # manual_ip:
  #   static_ip: 192.168.1.98
  #   gateway: 192.168.1.1
  #   subnet: 255.255.255.0
  #   dns1: 192.168.1.1
  #   dns2: 8.8.8.8

logger:
  
api:
  reboot_timeout: 0s

ota:

web_server:
  port: 80

binary_sensor:
  - platform: status
    name: ${board_name}_Status

  - platform: gpio
    pin: 
      number: P8
      inverted: true
    name: ${board_name}_Buttom
    id: butt
    on_press:
      then:
        - light.toggle: light1 #relay_1

text_sensor:
  - platform: template
    name: ${board_name}_Uptime
    lambda: |-
        int seconds = round(id(uptime_sensor).raw_state);
        int days = seconds / (24 * 3600);
        seconds = seconds % (24 * 3600);
        int hours = seconds / 3600;
        seconds = seconds % 3600;
        int minutes = seconds /  60;
        seconds = seconds % 60;
        return (
          (days ? to_string(days) + "d " : "00d ") +
          (hours ? to_string(hours) + "h " : "00h ") +
          (minutes ? to_string(minutes) + "m " : "00m ") +
          (to_string(seconds) + "s")
        );
    icon: mdi:clock-start
    update_interval: 15s

  - platform: wifi_info
    ip_address:
      name: ${board_name}_IP
    ssid:
      name: ${board_name}_SSID
    bssid:
      name: ${board_name}_BSSID
    mac_address:
      name: ${board_name}_Mac
    # scan_results:
    #   name: ${board_name}_Latest_Scan_Results

  - platform: version
    name: ${board_name}_ESPHome_Version
    hide_timestamp: true

sensor:
  - platform: uptime
    name: ${board_name}_Uptime_s
    id: uptime_sensor
    update_interval: 15s

  - platform: wifi_signal
    name: ${board_name}_WiFi_RSSI
    update_interval: 60s

button:
  - platform: restart
    name: ${board_name}_Restart
    id: id_restart_button

# switch:
#   - platform: gpio
#     name: ${board_name}_Relay_USB
#     pin: P7 
#     id: relay_1

output:
  - platform: gpio
    id: light_output
    pin: P7

light:
  - platform: binary
    name: ${board_name}_Night_S
    output: light_output
    id: light1

time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Moscow
    on_time:
      - seconds: 0
        minutes: 0
        hours: 12
        then:
          - button.press: id_restart_button
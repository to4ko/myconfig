substitutions:
  board_name: esp32_node_k
  node_name: esp32-node-k
  
esphome:
  name: ${node_name}
  comment: "ESP32 CO2 TPH Adressable_Led Node K"
  friendly_name: "ESP32 Node K"
  area: "Kitchen"
  # platformio_options:
  #   board_build.partitions: ../../../custom_components/partitions_esp32_4mb.csv
  on_boot:
    priority: 800
    then:
      - switch.turn_on: id_abc_calibration
      - delay: 5s
      - ble.disable:

esp32_ble:
  enable_on_boot: False
  

safe_mode:
  disabled: False
  num_attempts: 5
  reboot_timeout: 15min

esp32:
  board: nodemcu-32s
  framework:
    type: esp-idf

wifi:
  ssid: !secret wifi_ssid_iot
  password: !secret wifi_pass
  domain: !secret my_domain
  reboot_timeout: 15min
  power_save_mode: none
  #output_power: 17.5dB
  #fast_connect: true
  #power_save_mode: none
  # manual_ip:
  #   static_ip: 192.168.1.107
  #   gateway: 192.168.1.1
  #   subnet: 255.255.255.0
  #   dns1: 192.168.1.1
  #   dns2: 8.8.8.8

logger:
  baud_rate: 0
  
api:
  reboot_timeout: 0s

ota:
  - platform: esphome

web_server:
  port: 80
  
uart:
  rx_pin: GPIO03
  tx_pin: GPIO01
  baud_rate: 9600

i2c:
  sda: GPIO21
  scl: GPIO22
  scan: True

# esp32_ble_tracker:
#   scan_parameters:
#     interval: 512ms
#     window: 48ms
#     active: true

# remote_transmitter:
#   pin: GPIO26
#   carrier_duty_percent: 50%

# remote_receiver:
#   pin: GPIO12
#   dump: all

light:
  - platform: monochromatic
    name: "Light"
    output: pwm1
    effects:
      - strobe:

  - platform: esp32_rmt_led_strip
    rgb_order: GRB
    pin: GPIO19
    num_leds: 12
    chipset: ws2812
    name: "LED"
  # - platform: neopixelbus
  #   variant: WS2812
  #   pin: GPIO19
  #   num_leds: 12
  #   type: GRB
  #   name: "LED"
  #   method:
  #     type: esp32_rmt
  #     channel: 2
    id: light1
    effects:
      # - addressable_rainbow:
      # - addressable_color_wipe:
      # - addressable_scan:
      # - addressable_twinkle:
      # - addressable_random_twinkle:
      # - addressable_fireworks:
      # - addressable_flicker:
      - automation:
          name: "Green_Alarm"
          sequence:
            - light.addressable_set:
                id: light1
                color_brightness: 100%
                red: 0%
                green: 100%
                blue: 0%
            - delay: 1s
            - light.addressable_set:
                id: light1
                color_brightness: 10%
                red: 0%
                green: 100%
                blue: 0%
            - delay: 1s
      - automation:
          name: "Red_Alarm"
          sequence:
            - light.addressable_set:
                id: light1
                color_brightness: 100%
                red: 100%
                green: 0%
                blue: 0%
            - delay: 1s
            - light.addressable_set:
                id: light1
                color_brightness: 10%
                red: 100%
                green: 0%
                blue: 0%
            - delay: 1s

output:
  - platform: ledc
    id: pwm1
    pin: GPIO18
    frequency: 1000 Hz

binary_sensor:
  - platform: status
    name: "Status"

text_sensor:
  - platform: template
    name: "Uptime"
    lambda: |-
        int seconds = round(id(uptime_sensor).raw_state);
        int days = seconds / (24 * 3600);
        seconds = seconds % (24 * 3600);
        int hours = seconds / 3600;
        seconds = seconds % 3600;
        int minutes = seconds /  60;
        seconds = seconds % 60;
        return (
          (days ? to_string(days) + "d " : "00d ") +
          (hours ? to_string(hours) + "h " : "00h ") +
          (minutes ? to_string(minutes) + "m " : "00m ") +
          (to_string(seconds) + "s")
        );
    icon: mdi:clock-start
    update_interval: 15s

  - platform: wifi_info
    ip_address:
      name: "IP"
    ssid:
      name: "SSID"
    bssid:
      name: "BSSID"
    mac_address:
      name: "MAC"
    # scan_results:
    #   name: "Latest Scan Results"

  - platform: version
    name: "ESPHome Version"
    hide_timestamp: true
    
sensor:
  - platform: uptime
    name: "Uptime s"
    id: uptime_sensor
    update_interval: 15s
    disabled_by_default: true

  - platform: bme280_i2c
    temperature:
      name: "Temperature"
      oversampling: 16x
      id: bme280_temperature  
    pressure:
      name: "Pressure"
      id: bme280_pressure
    humidity:
      name: "Humidity"
      id: bme280_humidity
      filters:
        - offset: 7.5      
    address: 0x76
    update_interval: 30s

  # - platform: bh1750
  #   name: "Illuminance"
  #   address: 0x23
  #   #measurement_duration: 254
  #   update_interval: 10s
  #   accuracy_decimals: 0

  # - platform: mhz19
  #   co2:
  #     name: "Z19 CO2 K"
  #   temperature:
  #     name: "Z19 Temp K"
  #   update_interval: 60s
  #   id: my_mhz19_id
  #   automatic_baseline_calibration: true
  
  - platform: senseair
    co2:
      name: "CO2"
    update_interval: 60s
    id: id_my_co2
  
  - platform: wifi_signal
    name: "WiFi RSSI"
    update_interval: 60s


  # - platform: sun
  #   name: ${board_name}_Sun_Elevation
  #   type: elevation
  # - platform: sun
  #   name: ${board_name}_Sun_Azimuth
  #   type: azimuth

# switch:

switch:
  - platform: template
    name: "ABC"
    id: id_abc_calibration
    restore_mode: RESTORE_DEFAULT_OFF
    optimistic: true
    on_turn_on:
      - senseair.abc_enable: id_my_co2
    on_turn_off:
      - senseair.abc_disable: id_my_co2

sun:
  latitude: !secret my_lat
  longitude: !secret my_long

button:
  - platform: restart
    name: "Restart"

  - platform: template
    name: "CO2 Calibrate"
    on_press:
      - senseair.background_calibration: id_my_co2
    
time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Moscow
substitutions:
  board_name: s26_socket_1
  node_name: s26-socket-1

esphome:
  name: ${node_name}
  comment: Sonoff S26 socket 1 Night Light S
  # on_boot:
  #   then:
  #     - switch.turn_on: relay

safe_mode:
  disabled: False
  num_attempts: 5
  reboot_timeout: 15min

esp8266:
  board: esp01_1m

wifi:
  ssid: !secret wifi_ssid_iot
  password: !secret wifi_pass
  domain: !secret my_domain
  reboot_timeout: 15min
  #output_power: 10dB
  #fast_connect: true
  #power_save_mode: none
  # manual_ip:
  #   static_ip: ${ip_address}
  #   gateway: 192.168.1.1
  #   subnet: 255.255.255.0
  #   dns1: 192.168.1.1
  #   dns2: 8.8.8.8


logger:
  baud_rate: 0
  esp8266_store_log_strings_in_flash: false

api:
  reboot_timeout: 0s

ota:
  - platform: esphome

web_server:
  port: 80

output:
  - platform: gpio
    id: manual_status_led
    pin: 
      number: GPIO13
      inverted: true

  - platform: gpio
    pin: GPIO12
    id: relay

light:
  - platform: binary
    name: "Status LED"
    output: manual_status_led
    id: wifi_led

  - platform: binary
    name: ${board_name}_Night_S
    output: relay
    id: light1
    icon: mdi:candle
    restore_mode: RESTORE_DEFAULT_OFF

binary_sensor:
  - platform: gpio
    pin: GPIO00
    id: reset
    internal: true
    filters:
      - invert:
    on_press:
      - light.toggle: light1

  - platform: status
    name: "Status"
  
sensor:
  - platform: uptime
    name: "Uptime s"
    id: uptime_sensor

  - platform: wifi_signal
    name: "WiFi RSSI"
    update_interval: 60s

text_sensor:
  - platform: template
    name: "Uptime"
    lambda: |-
        int seconds = round(id(uptime_sensor).raw_state);
        int days = seconds / (24 * 3600);
        seconds = seconds % (24 * 3600);
        int hours = seconds / 3600;
        seconds = seconds % 3600;
        int minutes = seconds /  60;
        seconds = seconds % 60;
        return (
          (days ? to_string(days) + "d " : "00d ") +
          (hours ? to_string(hours) + "h " : "00h ") +
          (minutes ? to_string(minutes) + "m " : "00m ") +
          (to_string(seconds) + "s")
        );
    icon: mdi:clock-start
    update_interval: 15s

  - platform: wifi_info
    ip_address:
      name: "IP"
    ssid:
      name: "SSID"
    bssid:
      name: "BSSID"
    mac_address:
      name: "MAC"
    # scan_results:
    #   name: "Latest Scan Results"

  - platform: version
    name: "ESPHome Version"
    hide_timestamp: true

button:
  - platform: restart
    name: "Restart"
    
time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Moscow
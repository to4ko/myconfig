substitutions:
  board_name: esp01_weight_pad
  node_name: esp01-weight-pad

esphome:
  name: ${node_name}
  comment: ESP01 HX711 node

safe_mode:
  disabled: False
  num_attempts: 5
  reboot_timeout: 15min

esp8266:
  board: esp01_1m

wifi:
  ssid: !secret wifi_ssid_iot
  password: !secret wifi_pass
  domain: !secret my_domain
  reboot_timeout: 15min
  #output_power: 17.5dB
  #fast_connect: true
  #power_save_mode: none
  # manual_ip:
  #   static_ip: 192.168.1.69
  #   gateway: 192.168.1.1
  #   subnet: 255.255.255.0
  #   dns1: 192.168.1.1
  #   dns2: 8.8.8.8

logger:
  baud_rate: 0

api:
  reboot_timeout: 0s

ota:
  - platform: esphome

web_server:
  port: 80

binary_sensor:
  - platform: status
    name: "Status"
    
button:
  - platform: restart
    name: "Restart"

sensor:
  - platform: uptime
    name: "Uptime s"
    icon: mdi:clock-outline
    id: uptime_sensor

  - platform: wifi_signal
    name: "WiFi RSSI"
    update_interval: 60s

  - platform: hx711
    name: ${board_name}_load
    dout_pin: GPIO02
    clk_pin: GPIO03
    gain: 128
    update_interval: 15s
    id: id_load
    filters:
      - calibrate_linear:
          - 140537 -> 0
          - 76180 -> 2800
 
      - lambda: |-
          if (x>= 500 && x <= 10000) return x;
          else return {};         
    unit_of_measurement: g

  - platform: template
    name: ${board_name}_fill
    update_interval: 15s
    filters:
      - calibrate_linear:
          - 2200 -> 0.0
          - 8800 -> 100.0
    unit_of_measurement: '%'
    accuracy_decimals: 0
    lambda: |-
      float raw_value = id(id_load).state;
      return raw_value;

text_sensor:
  - platform: template
    name: "Uptime"
    lambda: |-
        int seconds = round(id(uptime_sensor).raw_state);
        int days = seconds / (24 * 3600);
        seconds = seconds % (24 * 3600);
        int hours = seconds / 3600;
        seconds = seconds % 3600;
        int minutes = seconds /  60;
        seconds = seconds % 60;
        return (
          (days ? to_string(days) + "d " : "00d ") +
          (hours ? to_string(hours) + "h " : "00h ") +
          (minutes ? to_string(minutes) + "m " : "00m ") +
          (to_string(seconds) + "s")
        );
    icon: mdi:clock-start
    update_interval: 15s

  - platform: wifi_info
    ip_address:
      name: "IP"
    ssid:
      name: "SSID"
    bssid:
      name: "BSSID"
    mac_address:
      name: "MAC"
    # scan_results:
    #   name: "Latest Scan Results"

  - platform: version
    name: "ESPHome Version"
    hide_timestamp: true

time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Moscow
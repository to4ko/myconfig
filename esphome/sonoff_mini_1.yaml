substitutions:
  board_name: sonoff_mini_1
  node_name: sonoff-mini-1

esphome:
  name: ${node_name}
  comment: "Doorbell HB"
  friendly_name: "Doorbell HB"
  area: "Hall big"
  on_boot:
    then:    
      - switch.turn_off: relay
      - light.turn_off: wifi_led

safe_mode:
  disabled: False
  num_attempts: 5
  reboot_timeout: 15min

esp8266:
  board: esp01_1m

wifi:
  ssid: !secret wifi_ssid_iot
  password: !secret wifi_pass
  domain: !secret my_domain
  reboot_timeout: 15min
  #output_power: 17.5dB
  #fast_connect: true
  #power_save_mode: none
  # manual_ip:
  #   static_ip: 192.168.1.52
  #   gateway: 192.168.1.1
  #   subnet: 255.255.255.0
  #   dns1: 192.168.1.1
  #   dns2: 8.8.8.8

logger:
  baud_rate: 0

api:
  reboot_timeout: 0s

ota:
  - platform: esphome

web_server:
  port: 80

output:
  - platform: gpio
    id: manual_status_led
    pin: 
      number: GPIO13
      inverted: true
      
light:
  - platform: binary
    name: "Status LED"
    output: manual_status_led
    id: wifi_led
  
binary_sensor:
  - platform: gpio
    pin: GPIO00
    id: reset
    internal: true
    filters:
      - invert:
    on_press:
      - switch.toggle: relay

  - platform: gpio
    name: "Switch"
    pin: 
      number: GPIO04
      inverted: True
    id: switch_1
    filters:
      - delayed_on: 20ms
      - delayed_off: 20ms
    on_press:
      then:
        - if:
            condition:
              - switch.is_off: id_mute
              - binary_sensor.is_off: id_delay_flag
            then:
              - switch.turn_on: relay
              - binary_sensor.template.publish:
                  id: id_delay_flag
                  state: ON
              - delay: 2s
              - switch.turn_off: relay
              - light.turn_off: wifi_led

    # on_release:
    #   then:
    #     - switch.turn_off: relay
    #     - light.turn_off: wifi_led
              
  - platform: status
    name: "Status"

  - platform: template
    name: "Delay Flag"
    id: id_delay_flag
    on_press:
      then:
        - delay: 1s
        - binary_sensor.template.publish:
            id: id_delay_flag
            state: OFF
            
switch:
  - platform: gpio
    name: "Relay"
    pin: GPIO12
    id: relay
    restore_mode: RESTORE_DEFAULT_OFF

  - platform: template
    name: "Mute"
    id: id_mute
    icon: mdi:volume-off
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF

sensor:
  - platform: uptime
    name: "Uptime s"
    id: uptime_sensor
    disabled_by_default: true

  - platform: wifi_signal
    name: "WiFi RSSI"
    update_interval: 60s

text_sensor:
  - platform: template
    name: "Uptime"
    lambda: |-
        int seconds = round(id(uptime_sensor).raw_state);
        int days = seconds / (24 * 3600);
        seconds = seconds % (24 * 3600);
        int hours = seconds / 3600;
        seconds = seconds % 3600;
        int minutes = seconds /  60;
        seconds = seconds % 60;
        return (
          (days ? to_string(days) + "d " : "00d ") +
          (hours ? to_string(hours) + "h " : "00h ") +
          (minutes ? to_string(minutes) + "m " : "00m ") +
          (to_string(seconds) + "s")
        );
    icon: mdi:clock-start
    update_interval: 15s

  - platform: wifi_info
    ip_address:
      name: "IP"
    ssid:
      name: "SSID"
    bssid:
      name: "BSSID"
    mac_address:
      name: "MAC"
    # scan_results:
    #   name: "Latest Scan Results"

  - platform: version
    name: "ESPHome Version"
    hide_timestamp: true

button:
  - platform: restart
    name: "Restart"
    
time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Moscow
substitutions:
  board_name: esp32_strip_1s_wadrobe_hb
  node_name: esp32-strip-1s-wadrobe-hb

esphome:
  name: ${node_name}
  comment: Yeelight 1s Strip Wadrobe HB

safe_mode:
  disabled: False
  num_attempts: 5
  reboot_timeout: 15min

esp32:
  board: esp32doit-devkit-v1
  framework:
    type: esp-idf
    sdkconfig_options:
      CONFIG_FREERTOS_UNICORE: y
    advanced:
      ignore_efuse_mac_crc: true
      ignore_efuse_custom_mac: true

wifi:
  ssid: !secret wifi_ssid_iot
  password: !secret wifi_pass
  domain: !secret my_domain
  reboot_timeout: 15min
  #output_power: 17.5dB
  fast_connect: true
  #use_address: 192.168.1.72
  #power_save_mode: none
  # manual_ip:
  #   static_ip: 192.168.1.72
  #   gateway: 192.168.1.1
  #   subnet: 255.255.255.0
  #   dns1: 192.168.1.1
  #   dns2: 8.8.8.8

logger:
  baud_rate: 0

api:
  reboot_timeout: 0s

ota:
  - platform: esphome

output:
  - platform: ledc
    pin: GPIO13
    id: output_red
    frequency: 4882Hz
  - platform: ledc
    pin: GPIO14
    id: output_green
    frequency: 4882Hz
  - platform: ledc
    pin: GPIO5
    id: output_blue
    frequency: 4882Hz


binary_sensor:
  - platform: status
    name: ${board_name}_Status

light:
  - platform: rgb
    name: ${board_name}_RGB
    red: output_red
    green: output_green
    blue: output_blue
    gamma_correct: 0
    effects:
      - flicker:
      - flicker:
          name: Flicker Effect With Custom Values
          alpha: 95%
          intensity: 1.5%
      - strobe:
      - strobe:
          name: Strobe Effect With Custom Values
          colors:
            - state: True
              brightness: 100%
              red: 100%
              green: 90%
              blue: 0%
              duration: 500ms
            - state: False
              duration: 250ms
            - state: True
              brightness: 100%
              red: 0%
              green: 100%
              blue: 0%
              duration: 500ms
      - random:
      - random:
          name: Random Effect With Custom Values
          transition_length: 5s
          update_interval: 7s
      - random:
          name: "My Slow Random Effect"
          transition_length: 30s
          update_interval: 30s
      - random:
          name: "My Fast Random Effect"
          transition_length: 4s
          update_interval: 5s

sensor:
  - platform: uptime
    name: ${board_name}_Uptime_s
    id: uptime_sensor
    update_interval: 15s
    
  - platform: wifi_signal
    name: ${board_name}_WiFi_RSSI
    update_interval: 60s

button:
  - platform: restart
    name: ${board_name}_Restart

text_sensor:
  - platform: template
    name: ${board_name}_Uptime
    lambda: |-
        int seconds = round(id(uptime_sensor).raw_state);
        int days = seconds / (24 * 3600);
        seconds = seconds % (24 * 3600);
        int hours = seconds / 3600;
        seconds = seconds % 3600;
        int minutes = seconds /  60;
        seconds = seconds % 60;
        return (
          (days ? to_string(days) + "d " : "00d ") +
          (hours ? to_string(hours) + "h " : "00h ") +
          (minutes ? to_string(minutes) + "m " : "00m ") +
          (to_string(seconds) + "s")
        );
    icon: mdi:clock-start
    update_interval: 15s

  - platform: wifi_info
    ip_address:
      name: ${board_name}_IP
    ssid:
      name: ${board_name}_SSID
    bssid:
      name: ${board_name}_BSSID
    mac_address:
      name: ${board_name}_Mac
    # scan_results:
    #   name: ${board_name}_Latest_Scan_Results

  - platform: version
    name: ${board_name}_ESPHome_Version
    hide_timestamp: true
    
time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Moscow
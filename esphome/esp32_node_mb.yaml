substitutions:
  board_name: esp32_node_mb
  node_name: esp32-node-mb
 
esphome:
  name: ${node_name}
  comment: "ESP32 CO2 TPH Node MB"
  friendly_name: "ESP32 Node MB"
  area: "Master Bedroom"
  on_boot:
    priority: 800
    then:
      - switch.turn_on: id_abc_calibration
      - delay: 5s
      - ble.disable:

esp32_ble:
  enable_on_boot: False

safe_mode:
  disabled: False
  num_attempts: 5
  reboot_timeout: 15min

esp32:
  board: nodemcu-32s
  framework:
    type: esp-idf
    
wifi:
  ssid: !secret wifi_ssid_iot
  password: !secret wifi_pass
  domain: !secret my_domain
  reboot_timeout: 15min
  #output_power: 17.5dB
  #fast_connect: true
  power_save_mode: none
  # networks:
  #   - ssid: !secret wifi_ssid
  #     password: !secret wifi_pass
  #     hidden: false
  #     bssid: !secret wifi_bssid_mb_main
  #     priority: 0
  #   - ssid: !secret wifi_ssid
  #     password: !secret wifi_pass
  #     hidden: false
  # manual_ip:
  #   static_ip: 192.168.1.104
  #   gateway: 192.168.1.1
  #   subnet: 255.255.255.0
  #   dns1: 192.168.1.1
  #   dns2: 8.8.8.8


debug:
  update_interval: 5s

logger:
  level: debug

api:
  reboot_timeout: 0s

ota:
  - platform: esphome

web_server:
  port: 80
  
binary_sensor:
  - platform: status
    name: "Status"
    
uart:
  rx_pin: GPIO16
  tx_pin: GPIO17
  baud_rate: 9600

one_wire:
  - platform: gpio
    pin: GPIO26
    id: dallas_node_short

# i2c:
#   sda: GPIO21
#   scl: GPIO22
#   scan: True

text_sensor:
  - platform: template
    name: "Uptime"
    lambda: |-
        int seconds = round(id(uptime_sensor).raw_state);
        int days = seconds / (24 * 3600);
        seconds = seconds % (24 * 3600);
        int hours = seconds / 3600;
        seconds = seconds % 3600;
        int minutes = seconds /  60;
        seconds = seconds % 60;
        return (
          (days ? to_string(days) + "d " : "00d ") +
          (hours ? to_string(hours) + "h " : "00h ") +
          (minutes ? to_string(minutes) + "m " : "00m ") +
          (to_string(seconds) + "s")
        );
    icon: mdi:clock-start
    update_interval: 15s
  
  - platform: wifi_info
    ip_address:
      name: "IP"
    ssid:
      name: "SSID"
    bssid:
      name: "BSSID"
    mac_address:
      name: "MAC"
    # scan_results:
    #   name: "Latest Scan Results"

  - platform: version
    name: "ESPHome Version"
    hide_timestamp: true

  # - platform: debug
  #   device:
  #     name: ${board_name}_Device_Info
  #   reset_reason:
  #     name: ${board_name}_Reset_Reason
sensor:
  - platform: uptime
    name: "Uptime s"
    id: uptime_sensor
    update_interval: 15s
    disabled_by_default: true
      
  - platform: dallas_temp
    address: 0xA83C01D607703828
    one_wire_id: dallas_node_short
    name: "Heating Pipe"
    # accuracy_decimals: 2
    # resolution: 12

  - platform: senseair
    co2:
      name: "CO2"
    update_interval: 60s
    id: id_my_co2
    
  # - platform: bme280_i2c
  #   temperature:
  #     name: "Temperature"
  #     oversampling: 16x
  #     id: bme280_temperature
   
  #   pressure:
  #     name: "Pressure"
  #     id: bme280_pressure
  #   humidity:
  #     name: "Humidity"
  #     id: bme280_humidity
  #     filters:
  #       - offset: 5.0      
  #   address: 0x76
  #   update_interval: 30s

  - platform: wifi_signal
    name: "WiFi RSSI"
    update_interval: 60s

  # - platform: debug
  #   free:
  #     name: ${board_name}_Heap_Free
  #   block:
  #     name: ${board_name}_Heap_Max_Block
  #   loop_time:
  #     name: ${board_name}_Loop_Time

switch:
  - platform: template
    name: "ABC"
    id: id_abc_calibration
    restore_mode: RESTORE_DEFAULT_OFF
    optimistic: true
    on_turn_on:
      - senseair.abc_enable: id_my_co2
    on_turn_off:
      - senseair.abc_disable: id_my_co2

button:
  - platform: restart
    name: "Restart"

  - platform: template
    name: "CO2 Calibrate"
    on_press:
      - senseair.background_calibration: id_my_co2

time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Moscow
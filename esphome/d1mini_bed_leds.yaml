substitutions:
  board_name: d1mini_bed_leds
  host_name: d1mini-bed-leds
  
esphome:
  name: ${host_name}
  comment: "D1 Mini Bed Led Strips with Motion sensors"
  friendly_name: "D1 Mini Bed LEDs"
  area: "Vova's room"

safe_mode:
  disabled: False
  num_attempts: 5
  reboot_timeout: 15min

esp8266:
  board: d1_mini
  # framework:
  #   version: 2.7.4  

wifi:
  ssid: !secret wifi_ssid_iot
  password: !secret wifi_pass
  domain: !secret my_domain
  reboot_timeout: 15min
  # output_power: 17.5dB
  #fast_connect: true
  #use_address: 192.168.1.140
  # power_save_mode: none
  # manual_ip:
  #   static_ip: 192.168.1.140
  #   gateway: 192.168.1.1
  #   subnet: 255.255.255.0
  #   dns1: 192.168.1.1
  #   dns2: 8.8.8.8

logger:

api:
  reboot_timeout: 0s

ota:
  - platform: esphome

web_server:
  port: 80

output:
  - platform: esp8266_pwm
    id: left_strip
    pin: GPIO5
    min_power: 0.01
    max_power: 1
    zero_means_zero: True


  - platform: esp8266_pwm
    id: right_strip
    pin: GPIO4
    min_power: 0.01
    max_power: 1
    zero_means_zero: True

light:
  - platform: monochromatic
    name: "Strip Dima"
    output: left_strip
    id: light_d

  - platform: monochromatic
    name: "Strip Sandra"
    output: right_strip
    id: light_s
  
binary_sensor:
  - platform: status
    name: "Status"

  - platform: homeassistant
    name: "HA Bed LED Enabled"
    id: ha_led
    entity_id: binary_sensor.bed_led_enable

  - platform: gpio
    pin:
      number: GPIO14
      inverted: false
    name: "Motion Sandra"
    device_class: motion
    id: motion_s
    # on_press:
    #   then:
    #     - if:
    #         condition:
    #           and: 
    #             - or:
    #                 - sun.is_below_horizon: 
    #                 - sensor.in_range:
    #                     id: sun_elevation
    #                     below: 5.0     
    #             - not:
    #                 binary_sensor.is_off: ha_led
    #             #- light.is_off: light_s
    #         then:
    #           - light.turn_on: 
    #               id: light_s
    #               brightness: 40%

  - platform: gpio
    pin:
      number: GPIO12
      inverted: false
    name: "Motion Dima"
    device_class: motion
    id: motion_d
    # on_press:
    #   then:
    #     - if:
    #         condition:
    #           and:
    #             - or:
    #                 - sun.is_below_horizon: 
    #                 - sensor.in_range:
    #                     id: sun_elevation
    #                     below: 5.0                
    #             - not:
    #                 binary_sensor.is_off: ha_led
    #             #- light.is_off: light_d
    #         then:
    #           - light.turn_on: 
    #               id: light_d
    #               brightness: 60%

text_sensor:
  - platform: template
    name: "Uptime"
    lambda: |-
        int seconds = round(id(uptime_sensor).raw_state);
        int days = seconds / (24 * 3600);
        seconds = seconds % (24 * 3600);
        int hours = seconds / 3600;
        seconds = seconds % 3600;
        int minutes = seconds /  60;
        seconds = seconds % 60;
        return (
          (days ? to_string(days) + "d " : "00d ") +
          (hours ? to_string(hours) + "h " : "00h ") +
          (minutes ? to_string(minutes) + "m " : "00m ") +
          (to_string(seconds) + "s")
        );
    icon: mdi:clock-start
    update_interval: 15s

  - platform: wifi_info
    ip_address:
      name: "IP"
    ssid:
      name: "SSID"
    bssid:
      name: "BSSID"
    mac_address:
      name: "MAC"
    # scan_results:
    #   name: "Latest Scan Results"

  - platform: version
    name: "ESPHome Version"
    hide_timestamp: true

sensor:
  - platform: uptime
    name: "Uptime s"
    id: uptime_sensor
    update_interval: 15s
    disabled_by_default: true

  # - platform: adc
  #   pin: A0
  #   name: "Light"
  #   update_interval: 15s
  #   filters:
  #     - multiply: 3.3

  - platform: wifi_signal
    name: "WiFi RSSI"
    update_interval: 60s
button:
  - platform: restart
    name: "Restart"

time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Moscow
    # on_time:
    #   - seconds: 15
    #     then:
    #       - if:
    #           condition:
    #             and: 
    #               - for:
    #                   time: 20s
    #                   condition:
    #                     binary_sensor.is_off: motion_d
    #               - light.is_on: light_d
    #           then:
    #             - light.turn_off: 
    #                 id: light_d
    #                 transition_length: 5s
    #   - seconds: 15
    #     then:
    #       - if:
    #           condition:
    #               - for:
    #                   time: 20s
    #                   condition:
    #                     binary_sensor.is_off: motion_s
    #               - light.is_on: light_s      
    #           then:
    #             - light.turn_off:
    #                 id: light_s
    #                 transition_length: 5s
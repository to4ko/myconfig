substitutions:
  board_name: sonoff_basic_4
  node_name: sonoff-basic-4

esphome:
  name: ${node_name}
  on_boot:
    then:
      - switch.turn_on: relay
      - light.turn_off: main_led
  comment: Underbed Phone Charger S

safe_mode:
  disabled: False
  num_attempts: 5
  reboot_timeout: 15min

esp8266:
  board: esp01_1m
  
  
wifi:
  ssid: !secret wifi_ssid_iot
  password: !secret wifi_pass
  domain: !secret my_domain
  reboot_timeout: 15min
  #output_power: 17.5dB
  #fast_connect: true
  #power_save_mode: none
  # manual_ip:
  #   static_ip: 192.168.1.139
  #   gateway: 192.168.1.1
  #   subnet: 255.255.255.0
  #   dns1: 192.168.1.1
  #   dns2: 8.8.8.8

logger:
  baud_rate: 0
  esp8266_store_log_strings_in_flash: false
  
api:
  reboot_timeout: 0s

ota:
  - platform: esphome

web_server:
  port: 80

# status_led:
#   pin:
#     number: GPIO13
#     inverted: yes

output:
  - platform: gpio
    id: green_led
    pin: GPIO13
    inverted: True

light:
  - platform: binary
    name: ${board_name}_StatusLED
    internal: true
    output: green_led
    id: main_led

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: True
    name: ${board_name}_Button
    filters:
      - delayed_on: 10ms
      - delayed_off: 10ms
    on_press:
      - switch.toggle: relay
      
  - platform: status
    name: ${board_name}_Status

switch:
  - platform: gpio
    name: ${board_name}_Relay
    pin: GPIO12
    id: relay
    # on_turn_on:
    #   then:
    #     - light.turn_on: main_led
    # on_turn_off:
    #   then:
    #     - light.turn_off: main_led

sensor:
  - platform: uptime
    name: ${board_name}_Uptime_s
    id: uptime_sensor

  - platform: wifi_signal
    name: ${board_name}_WiFi_RSSI
    update_interval: 60s

text_sensor:
  - platform: template
    name: ${board_name}_Uptime
    lambda: |-
        int seconds = round(id(uptime_sensor).raw_state);
        int days = seconds / (24 * 3600);
        seconds = seconds % (24 * 3600);
        int hours = seconds / 3600;
        seconds = seconds % 3600;
        int minutes = seconds /  60;
        seconds = seconds % 60;
        return (
          (days ? to_string(days) + "d " : "00d ") +
          (hours ? to_string(hours) + "h " : "00h ") +
          (minutes ? to_string(minutes) + "m " : "00m ") +
          (to_string(seconds) + "s")
        );
    icon: mdi:clock-start
    update_interval: 15s

  - platform: wifi_info
    ip_address:
      name: ${board_name}_IP
    ssid:
      name: ${board_name}_SSID
    bssid:
      name: ${board_name}_BSSID
    mac_address:
      name: ${board_name}_Mac
    # scan_results:
    #   name: ${board_name}_Latest_Scan_Results

  - platform: version
    name: ${board_name}_ESPHome_Version
    hide_timestamp: true

button:
  - platform: restart
    name: ${board_name}_Restart
    
time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Moscow
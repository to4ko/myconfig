  - trigger:
      - trigger: time_pattern
        minutes: "/1"
      - trigger: homeassistant
        event: start
      - trigger: event
        event_type: event_template_reloaded
      - trigger: event
        event_type: automation_reloaded
    sensor:
      - name: Thermo Pad Daily Cost
        unique_id: thermo_pad_daily_cost
        state: "{{(states('input_number.tariff_energy_day')|float(0)*16*states('sensor.thermo_pad_hourly_power_consumption')|float(0)/1000+states('input_number.tariff_energy_night')|float(0)*8*states('sensor.thermo_pad_hourly_power_consumption')|float(0)/1000)|round(2, 'common')}}"
        unit_of_measurement: "rub"
        icon: mdi:currency-rub
      - name: Thermo Pad Monthly Cost
        unique_id: thermo_pad_montly_cost
        state: "{{(states('sensor.thermo_pad_daily_cost')|float(0)*30)|round(0, 'common') }}"
        unit_of_measurement: "rub"
        icon: mdi:currency-rub

      - name: ms01a Daily Cost
        unique_id: ms01a_daily_cost
        state: "{{(states('input_number.tariff_energy_day')|float(0)*16*states('sensor.ms01a_daily_power_consumption')|float(0)/1000+states('input_number.tariff_energy_night')|float(0)*8*states('sensor.ms01a_daily_power_consumption')|float(0)/1000)|round(2, 'common')}}"
        unit_of_measurement: "rub"
        icon: mdi:currency-rub
      - name: ms01a Monthly Cost
        unique_id: ma01a_monthly_cost
        state: "{{(states('sensor.ms01a_daily_cost')|float(0)*30)|round(0, 'common') }}"
        unit_of_measurement: "rub"
        icon: mdi:currency-rub

      - name: ms01b Daily Cost
        unique_id: ms01b_daily_cost
        state: "{{(states('input_number.tariff_energy_day')|float(0)*16*states('sensor.ms01b_daily_power_consumption')|float(0)/1000+states('input_number.tariff_energy_night')|float(0)*8*states('sensor.ms01b_daily_power_consumption')|float(0)/1000)|round(2, 'common')}}"
        unit_of_measurement: "rub"
        icon: mdi:currency-rub
      - name: ms01b Monthly Cost
        unique_id: ms01b_monthly_cost
        state: "{{(states('sensor.ms01b_daily_cost')|float(0)*30)|round(0, 'common') }}"
        unit_of_measurement: "rub"
        icon: mdi:currency-rub

      - name: pbs100 Daily Cost
        unique_id: pbs100_daily_cost
        state: "{{(states('input_number.tariff_energy_day')|float(0)*16*states('sensor.pbs100_daily_power_consumption')|float(0)/1000+states('input_number.tariff_energy_night')|float(0)*8*states('sensor.pbs100_daily_power_consumption')|float(0)/1000)|round(2, 'common')}}"
        unit_of_measurement: "rub"
        icon: mdi:currency-rub
      - name: pbs100 Monthly Cost
        unique_id: pbs100_monthly_cost
        state: "{{(states('sensor.pbs100_daily_cost')|float(0)*30)|round(0, 'common') }}"
        unit_of_measurement: "rub"
        icon: mdi:currency-rub

      - name: Ds1621plus Daily Cost
        unique_id: ds1621plus_daily_cost
        state: "{{(states('input_number.tariff_energy_day')|float(0)*16*states('sensor.ds1621plus_daily_power_consumption')|float(0)/1000+states('input_number.tariff_energy_night')|float(0)*8*states('sensor.ds1621plus_daily_power_consumption')|float(0)/1000)|round(2, 'common')}}"
        unit_of_measurement: "rub"
        icon: mdi:currency-rub
      - name: Ds1621plus Monthly Cost
        unique_id: ds1621plus_monthly_cost
        state: "{{(states('sensor.ds1621plus_daily_cost')|float(0)*30)|round(0, 'common') }}"
        unit_of_measurement: "rub"
        icon: mdi:currency-rub
        
      # - name: Ds220plus Daily Cost
      #   unique_id: ds220plus_daily_cost
      #   state: "{{(states('input_number.tariff_energy_day')|float(0)*16*states('sensor.ds220plus_daily_power_consumption')|float(0)/1000+states('input_number.tariff_energy_night')|float(0)*8*states('sensor.ds220plus_daily_power_consumption')|float(0)/1000)|round(2, 'common')}}"
      #   unit_of_measurement: "rub"
      #   icon: mdi:currency-rub
      # - name: Ds220plus Monthly Cost
      #   unique_id: ds220plus_montly_cost
      #   state: "{{(states('sensor.ds220plus_daily_cost')|float(0)*30)|round(0, 'common') }}"
      #   unit_of_measurement: "rub"
      #   icon: mdi:currency-rub

      - name: Ds920plus Daily Cost
        unique_id: ds920plus_daily_cost
        state: "{{(states('input_number.tariff_energy_day')|float(0)*16*states('sensor.ds920plus_daily_power_consumption')|float(0)/1000+states('input_number.tariff_energy_night')|float(0)*8*states('sensor.ds920plus_daily_power_consumption')|float(0)/1000)|round(2, 'common')}}"
        unit_of_measurement: "rub"
        icon: mdi:currency-rub
      - name: Ds920plus Monthly Cost
        unique_id: ds920plus_monthly_cost
        state: "{{(states('sensor.ds920plus_daily_cost')|float(0)*30)|round(0, 'common') }}"
        unit_of_measurement: "rub"
        icon: mdi:currency-rub

      - name: Utility Cost
        unique_id: utility_cost
        unit_of_measurement: "rub"
        icon: mdi:currency-rub
        state: "{{ (states('sensor.power_cost')|float(0) + states('sensor.water_cost')|float(0))|round(0, 'common') }}"

      # ############################################################################
      # Power monitoring sensors
      # ############################################################################
      # power_consumption:
      #   value_template: "{{ states('sensor.power_consumption_k')|int(0) + states('sensor.power_consumption_t')|int(0) + states('sensor.power_consumption_b')|int(0) + states('sensor.power_consumption_hs')|int(0) + states('sensor.power_consumption_mb')|int(0) + states('sensor.power_consumption_st')|int(0) + states('sensor.power_consumption_hb')|int(0) +states('sensor.power_consumption_v')|int(0) + states('sensor.power_consumption_s')|int(0) }}"
      #   unit_of_measurement: W
      #   icon_template: mdi:flash
      #   friendly_name: 'Power/Current'

      - name: Power Consumption K
        unique_id: power_consumption_k
        state: "{{ ( ((states('light.round_led_k')|replace('on','1'))|int(0)*32*state_attr('light.round_led_k','brightness')|int(0)/255)|float(0) + states('sensor.0x00158d0002451850_power')|float(0) + states('sensor.0x00158d0002476ed1_power')|float(0) + states('sensor.0x00158d000249b25b_power')|float(0) + states('sensor.0x00158d0001e85086_power')|float(0) + states('sensor.0x00158d000353a2e3_power')|float(0) ) |round(0, 'common')}}"
        unit_of_measurement: W
        icon: mdi:gauge

      - name: Power Consumption T
        unique_id: power_consumption_t
        state: "{{ ( ((states('light.0x00158d0002a36f7f_channel_1')|replace('on','1'))|int(0) * 14 )|float(0))|round(0, 'common') + states('sensor.sonoff_pow_r2_2_power')|float(0)|round(0, 'common') }}"
        unit_of_measurement: W
        icon: mdi:gauge

      - name: Power Consumption B
        unique_id: power_consumption_b
        state: "{{ ( (states('light.0x00158d0002a36433_channel_2')|replace('on','1'))|int(0)*20 +states('sensor.shelly_pm_b_power')|float(0) + 1 )|round(0, 'common') }}"
        unit_of_measurement: W
        icon: mdi:gauge

      - name: Power Consumption HS
        unique_id: power_consumption_hs
        state: "{{ ( ((states('light.round_led_hs')|replace('on','1'))|int(0)*32*state_attr('light.round_led_hs','brightness')|int(0)/255) + states('sensor.0x00158d000249b26b_power')|float(0) + states('sensor.0x00158d0002924790_power')|float(0) ) | round(0, 'common') }}"
        unit_of_measurement: W
        icon: mdi:gauge

      - name: Power Consumption MB
        unique_id: power_consumption_mb
        state: "{{ ( ((states('light.round_led_mb')|replace('on','1'))|int(0)*50*state_attr('light.round_led_mb','brightness')|int(0)/255)|float(0) + states('sensor.0x00158d000322e30c_power')|float(0) + states('sensor.0x00158d0002467773_power')|float(0) + states('sensor.0x00158d000224e3e4_power')|float(0) + 1 ) | round(0, 'common')}}"
        unit_of_measurement: W
        icon: mdi:gauge

      - name: Power Consumption V
        unique_id: power_consumption_v
        state: "{{ ( states('sensor.shelly_1pm_led_v_power')|float(0) + states('sensor.0x00158d000322e1d9_power')|float(0) + states('sensor.0x00158d0002395dc9_power')|float(0) + states('sensor.0x00158d000246776f_power')|float(0) + 1 ) | round(0, 'common')}}"
        unit_of_measurement: W
        icon: mdi:gauge

      - name: Power Consumption S
        unique_id: power_consumption_s
        state: "{{ ( iif(is_state('light.square_led_s', 'on') and is_state('binary_sensor.square_led_s_nightlight','off'), 90, 0) + iif(is_state('light.square_led_s', 'on') and is_state('binary_sensor.square_led_s_nightlight','on'), 5, 0) + states('sensor.plug_table_s_power')|float(0) + states('sensor.shellyplug_s_c50295_power')|float(0) + states('sensor.0x00158d000239097a_power')|float(0) + states('sensor.0x00158d0002395d58_power')|float(0) ) | round(0, 'common')}}"
        unit_of_measurement: W
        icon: mdi:gauge

      - name: Power Consumption St
        unique_id: power_consumption_st
        state: "{{ ( ((states('light.0x54ef441000680083_channel_2')|replace('on','1'))|int(0)*16) + states('sensor.sonoff_pow_r2_3_power')|float(0) + ((states('light.round_led_st')|replace('on','1'))|int(0)*16) ) | round(0, 'common')}}"
        unit_of_measurement: W
        icon: mdi:gauge

      - name: Power Consumption HB
        unique_id: power_consumption_hb
        state: "{{ ( states('light.0x00158d000223921b_channel_1')|replace('on',1)|int(0)*32.5 + states('light.0x00158d000253f04a_channel_2')|replace('on',1)|int(0)*32.5 + states('sensor.0x00158d00023e5812_power')|float(0) + states('sensor.0x00158d0001f2630e_power')|float(0) + states('sensor.0x00158d00024517fe_power')|float(0) + states('sensor.0x00158d000230fc52_power')|float(0) + states('sensor.0x00158d0001f26071_power')|float(0) + 2 ) | round(0, 'common') }}"
        unit_of_measurement: W
        icon: mdi:gauge

      # total_current:
      #   icon_template: mdi:current-ac
      #   value_template: "{{ (((states('sensor.power_consumption')|float(0) / states('sensor.voltage')|float(0))|float(0)))|round(1, 'common') }}"
      #   unit_of_measurement: "A"
      #   friendly_name: "Total current"

      - name: Power Cost
        unique_id: power_cost
        icon: mdi:currency-rub
        unit_of_measurement: "rub"
        state: "{{ (states('sensor.esp32_pzem_hb_energy_monthly_day')|float(0)*states('input_number.tariff_energy_day')|float(0) + states('sensor.esp32_pzem_hb_energy_monthly_night')|float(0)*states('input_number.tariff_energy_night')|float(0)) |round(2, 'common') }}"
      # - name: Power T1 Cost
      #   unique_id: power_T1_cost
      #   icon: mdi:currency-rub
      #   unit_of_measurement: "rub"
      #   state: "{{ (states('sensor.esp32_pzem_hb_energy_monthly_day')|float(0)*states('input_number.tariff_energy_day')|float(0) ) |round(2, 'common') }}"
      # - name: Power T2 Cost
      #   unique_id: power_t2_cost
      #   icon: mdi:currency-rub
      #   unit_of_measurement: "rub"
      #   state: "{{ (states('sensor.esp32_pzem_hb_energy_monthly_night')|float(0)*states('input_number.tariff_energy_night')|float(0)) |round(2, 'common') }}"





      - name: All Lights Power
        unique_id: all_lights_power
        state: >
          {{
          (iif(is_state('light.round_led_k', 'on'), 32, 0) + 
          iif(is_state('light.esp8266_hood_k', 'on'), 12, 0) + 
          iif(is_state('light.d1mini_light_l', 'on'), 16, 0) + 
          iif(is_state('light.sonoff_mini_4', 'on'), 16, 0) + 
          
          iif(is_state('light.0x00158d0002a36f7f_channel_1', 'on'), 14, 0) + 
          
          iif(is_state('light.0x00158d0002a36433_channel_2', 'on'), 20, 0) + 
          iif(is_state('light.mirror_light_b', 'on'), 7, 0) + 
          iif(is_state('light.esp32_node_b_light', 'on'), 5, 0) + 
          
          iif(is_state('light.round_led_hs', 'on'), 20, 0) + 
          iif(is_state('light.mono_strip_1_light', 'on'), 2, 0) +
          
          iif(is_state('light.0x54ef441000680083_channel_2', 'on'), 16, 0) + 
          iif(is_state('light.round_led_st', 'on'), 16, 0) + 
          
          iif(is_state('light.round_led_mb', 'on') and is_state('binary_sensor.round_led_mb_nightlight','off'), 32, 0) +
          iif(is_state('light.round_led_mb', 'on') and is_state('binary_sensor.round_led_mb_nightlight','on'), 5, 0) +
          iif(is_state('light.esp32_strip_1s_wadrobe_mb_rgb', 'on'), 15, 0) + 
          iif(is_state('light.esp32_strip_1s_bookshelf_mb_rgb', 'on'), 15, 0) + 
          iif(is_state('light.0x54ef441000c88fa8_light', 'on'), 10, 0) + 
          
          iif(is_state('light.0x00158d000223921b_channel_1', 'on'), 33, 0) + 
          iif(is_state('light.0x00158d000253f04a_channel_2', 'on'), 33, 0) + 
          iif(is_state('light.esp32_strip_1s_entrance_hb_rgb', 'on'), 15, 0) + 
          iif(is_state('light.esp32_strip_1s_wadrobe_hb_rgb', 'on'), 15, 0) + 
          
          states('sensor.shelly_1pm_led_v_power')|float(0) + 
          iif(is_state('light.d1mini_bed_leds_strip_dima', 'on'), 5, 0) +
          iif(is_state('light.d1mini_bed_leds_strip_sandra', 'on'), 5, 0) + 
          iif(is_state('light.0x54ef441000d4e7fd_light', 'on'), 10, 0) +

          iif(is_state('light.square_led_s', 'on') and is_state('binary_sensor.square_led_s_nightlight','off'), 90, 0) +
          iif(is_state('light.square_led_s', 'on') and is_state('binary_sensor.square_led_s_nightlight','on'), 5, 0) +
          iif(is_state('light.esp32_node_s_led', 'on'), 30, 0) + 
          iif(is_state('light.0x54ef4410000ea59b_light', 'on'), 10, 0) +
          iif(is_state('light.0x54ef441000d54c6c_light', 'on'), 10, 0))|round(2)
          }}
        unit_of_measurement: W
        icon: mdi:gauge

      - name: All IoT Power
        unique_id: all_iot_power
        state: >
          {{(
          states('sensor.0x00158d000230fc52_power')|float(0) - states('sensor.0x00158d0003539447_power')|float(0) +
          states('sensor.plug_table_s_power')|float(0) +
          states('sensor.shellyplug_s_c50295_power')|float(0) +
          states('sensor.0x00158d0002924790_power')|float(0) +
          states('sensor.0x00158d0002467773_power')|float(0) - states('sensor.0x00158d00035c194f_power')|float(0) - iif(is_state('switch.pc_s','on'),15,0)
          )|round(2)}}
        unit_of_measurement: W
        icon: mdi:gauge

      - name: All PC Power
        unique_id: all_pc_power
        state: >
          {{(
          states('sensor.0x00158d0003535ee5_power')|float(0) +
          states('sensor.0x00158d0003600ea4_power')|float(0) +
          states('sensor.0x00158d00035c194f_power')|float(0) +
          iif(is_state('switch.pc_s','on'),15,0)
          )|round(2)}}
        unit_of_measurement: W
        icon: mdi:gauge

      # ############################################################################
      # Water monitoring sensors
      # ############################################################################
      - name: Cold water meter
        unique_id: cold_water_meter
        icon: mdi:counter
        unit_of_measurement: "m³"
        state: "{{ ((states('input_number.cold_water_meter'))|float(0)) | round(2, 'common') }}"
        device_class: water
        state_class: total_increasing

      - name: Hot water meter
        unique_id: hot_water_meter
        icon: mdi:counter
        unit_of_measurement: "m³"
        state: "{{ ((states('input_number.hot_water_meter'))|float(0)) | round(2, 'common') }}"
        device_class: water
        state_class: total_increasing
        
      - name: Cold water Month
        unique_id: cold_water_month
        icon: mdi:counter
        unit_of_measurement: "m³"
        state: "{{ (((states('input_number.cold_water_meter_month'))|float(0)))|round(2, 'common') }}"
        device_class: water

      - name: Hot water Month
        unique_id: hot_water_month
        icon: mdi:counter
        unit_of_measurement: "m³"
        state: "{{ (((states('input_number.hot_water_meter_month'))|float(0)))|round(2, 'common') }}"
        device_class: water
        
      # - name: Cold water cost
      #   unique_id: cold_water_cost
      #   icon: mdi:currency-rub
      #   unit_of_measurement: "rub"
      #   state: "{{ (((states('input_number.cold_water_meter_month'))|float(0)) * states('input_number.tariff_cold_water')|float(0))|round(2, 'common') }}"

      # - name: Hot water cost
      #   unique_id: hot_water_cost
      #   icon: mdi:currency-rub
      #   unit_of_measurement: "rub"
      #   state: "{{ (((states('input_number.hot_water_meter_month'))|float(0)) * states('input_number.tariff_hot_water')|float(0))|round(2, 'common') }}"

      - name: Water cost
        unique_id: water_cost
        icon: mdi:currency-rub
        unit_of_measurement: "rub"
        state: >
          {{ (( (((states('input_number.cold_water_meter_month'))|float(0)))*states('input_number.tariff_cold_water')|float(0)) +
          (((states('input_number.hot_water_meter_month'))|float(0))*states('input_number.tariff_hot_water')|float(0)) )|round(2, 'common') }}
          
      - name: Water
        unique_id: water
        unit_of_measurement: "m³"
        state: >
          {{ (( (((states('input_number.cold_water_meter_month'))|float(0)))) +
          (((states('input_number.hot_water_meter_month'))|float(0))) )|round(2, 'common') }}
        device_class: water
        state_class: total_increasing
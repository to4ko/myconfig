# ##################################
# Toilet - Tank Counter
# ##################################
- alias: toilet_tank_counter
  id: toilet_tank_counter
  initial_state: true
  triggers:
    - trigger: state
      entity_id: binary_sensor.0x00158d0003262a35_contact
      from: 'off'
      to: 'on'
  conditions:
    # - condition: template
    #   value_template: "{{ trigger.to_state.state|int(0) > trigger.from_state.state|int(0) }}"
    - condition: template
      value_template: >
        {% set ignore = ['unknown', 'unavailable', 'none'] %}
        {{ trigger.from_state.state not in ignore and
           trigger.to_state.state not in ignore and
           trigger.to_state.state != trigger.from_state.state
        }}
    # - condition: template
    #   value_template: "{{ (states('sensor.d1mini_air_freshener_canister_left')|int(0) < 10) and (states('number.d1mini_air_freshener_counter')|int(0) % 25) == 0 }}"
  actions:
    - action: counter.increment
      entity_id: counter.toilet_tank


# ##################################
# Toilet - Air Freshener Counter
# ##################################
- alias: toilet_air_freshener_counter
  id: toilet_air_freshener_counter
  initial_state: true
  triggers:
    - trigger: state
      entity_id: number.d1mini_air_freshener_counter
      to:
  conditions:
    - condition: template
      value_template: "{{ trigger.to_state.state|int(0) > trigger.from_state.state|int(0) }}"
    - condition: template
      value_template: >
        {% set ignore = ['unknown', 'unavailable', 'none'] %}
        {{ trigger.from_state.state not in ignore and
           trigger.to_state.state not in ignore and
           trigger.to_state.state != trigger.from_state.state
        }}
    - condition: template
      value_template: "{{ (states('sensor.d1mini_air_freshener_canister_left')|int(0) < 10) and (states('number.d1mini_air_freshener_counter')|int(0) % 25) == 0 }}"
  actions:
    - action: notify.telegram
      data:
        message: "\U0001f50b Необходимо заменить баллон в освежителе - осталось менее {{states('sensor.d1mini_air_freshener_canister_left')|int(0)}}%!"

# ##################################
# Toilet - Air Freshener Spray
# ##################################
- alias: toilet_air_freshener_spray
  id: toilet_air_freshener_spray
  initial_state: true
  mode: single
  max_exceeded: silent
  triggers:
    - trigger: state
      entity_id: binary_sensor.0x00158d000232ddd6_contact
      from: "off"
      to: "on"
      for:
        minutes: 2
  conditions:
    - condition: template
      value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}"
    - condition: state
      entity_id: group.lights_t
      state: "on"
    - condition: state
      entity_id: fan.esp32_node_b_fan_t
      state: "off"
  actions:
    # - action: button.press
    #   entity_id: button.d1mini_air_freshener_spray
    - if:
        - condition: state
          entity_id: switch.esp32_node_b_fan_b_manual_mode
          state: 'off'
      then:
        - action: fan.turn_on
          entity_id: fan.esp32_node_b_fan_t
    - wait_for_trigger:
        - trigger: state
          entity_id: binary_sensor.0x00158d000232ddd6_contact
          to: "off"
          for:
            seconds: 10
      timeout:
        minutes: 30
      continue_on_timeout: false
    - action: timer.cancel
      entity_id: timer.fan_t
    - action: timer.start
      entity_id: timer.short_fan_t
    - condition: template
      value_template: "{{(as_timestamp(now()) - as_timestamp(states.button.d1mini_air_freshener_spray.last_changed)|int(0)) > 60 }}"
    # - wait_template: "{{ is_state('binary_sensor.d1mini_distance_sensor_radar', 'off') }}"
    #   timeout:
    #     minutes: 1
    - action: button.press
      entity_id: button.d1mini_air_freshener_spray

# ##################################
# Toilet - Air Freshener Spray Manual
# ##################################
- alias: toilet_air_freshener_spray_manual
  id: toilet_air_freshener_spray_manual
  initial_state: true
  mode: single
  max_exceeded: silent
  triggers:
    - trigger: event
      event_type: xiaomi_aqara.click
      event_data:
        entity_id: sensor.0x00158d0001b97111_action
        click_type: double
  actions:
    - action: button.press
      entity_id: button.d1mini_air_freshener_spray

# ##################################
# Toilet - Heater Control
# ##################################
- alias: toilet_heater_control
  id: toilet_heater_control
  initial_state: true
  triggers:
    - trigger: state
      entity_id: binary_sensor.heater_trigger_t
      to:
      #value_template: "{{ not (6>=now().hour|int(0) >=0 or is_state('switch.system_security_mode','on') or (is_state('binary_sensor.0x00158d0001ef2ffc_contact','on') and (as_timestamp(now())-as_timestamp(states.binary_sensor['0x00158d0001ef2ffc_contact'].last_changed) > 10*60))) }}"
  actions:
    #- action: climate.turn_{% if not (6>=now().hour|int(0) >=0 or is_state('switch.system_security_mode','on') or (is_state('binary_sensor.0x00158d0001ef2ffc_contact','on') and (as_timestamp(now())-as_timestamp(states.binary_sensor['0x00158d0001ef2ffc_contact'].last_changed) > 10*60))) %}on{%else%}off{%endif%}
    - if:
        - condition: state
          entity_id: binary_sensor.heater_trigger_t
          state: 'on'
      then:
        - action: climate.turn_on
          entity_id: climate.sonoff_pow_r2_2_wall_heater
      else:
        - action: climate.turn_off
          entity_id: climate.sonoff_pow_r2_2_wall_heater

# ##################################
# Toilet - Close Seat notify
# ##################################
- alias: toilet_close_seat_notify
  id: toilet_close_seat_notify
  initial_state: true
  triggers:
    - trigger: state
      entity_id: binary_sensor.seat_not_closed
      from: "off"
      to: "on"
  conditions:
    - condition: state
      entity_id: binary_sensor.tod_day
      state: "on"
    - condition: state
      entity_id: switch.system_dark_mode
      state: "off"
    - condition: template
      value_template: "{{(as_timestamp(now())-as_timestamp(state_attr('automation.toilet_close_seat_notify', 'last_triggered'),0)|int(0)) > 15 }}"
    - condition: template
      value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}"
  actions:
    - wait_for_trigger:
        - trigger: state
          entity_id: light.0x00158d0002a36f7f_channel_1
          to: "off"
          for:
            seconds: 3
        - trigger: state
          entity_id: light.esp32_node_b_light
          to: "off"
          for:
            seconds: 3
        - trigger: state
          entity_id: binary_sensor.0x00158d0001ef2ffc_contact
          to: "on"
          for:
            seconds: 3
        - trigger: state
          entity_id: binary_sensor.0x00158d0001ef2ffc_contact
          to: "off"
      timeout:
        minutes: 20
      continue_on_timeout: false
    # - action: media_player.volume_set
    #   data:
    #     entity_id: media_player.yandex_k
    #     volume_level: '{{states("input_number.main_volume")|float(0) + 0.1}}'
    - condition: state
      entity_id: binary_sensor.seat_not_closed
      state: "on"
    - action: media_player.play_media
      data:
        media_content_type: dialog
        entity_id: media_player.yandex_k
        media_content_id: "Пож+алуйста закр+ойте кр+ышку унит+аза!"
        extra:
          volume_level: '{{states("input_number.main_volume")|float(0) + 0.1}}'
    - wait_for_trigger:
        - trigger: state
          entity_id: binary_sensor.0x00158d000232ddd6_contact
          to: "off"
      timeout:
        minutes: 5
      continue_on_timeout: false
    - action: media_player.play_media
      data:
        media_content_type: dialog
        entity_id: media_player.yandex_k
        media_content_id: "Больш+ое спас+ибо!"

# - alias: toilet_occupancy_turn_on
#   id: toilet_occupancy_turn_on
#   initial_state: true
#   triggers:
#     - trigger: event
#       event_type: xiaomi_aqara.motion
#       event_data:
#         entity_id: binary_sensor.0x00158d0001e54280_motion
#   conditions:
#     - condition: state
#       entity_id: input_boolean.toilet_occupancy
#       state: "off"
#     - condition: state
#       entity_id: binary_sensor.0x00158d0001ef2ffc_contact
#       state: "off"
#       for:
#         seconds: 3
#   actions:
#     - action: input_boolean.turn_on
#       entity_id: input_boolean.toilet_occupancy

# - alias: toilet_occupancy_turn_on_with_button_and_seat
#   id: toilet_occupancy_turn_on_with_button_and_seat
#   initial_state: true
#   triggers:
#     - trigger: event
#       event_type: xiaomi_aqara.click
#       event_data:
#         entity_id: sensor.0x00158d0001b97111_action
#     - trigger: state
#       entity_id: binary_sensor.0x00158d000232ddd6_contact
#       to: "on"
#       from: "off"
#   conditions:
#     - condition: state
#       entity_id: input_boolean.toilet_occupancy
#       state: "off"
#   actions:
#     - action: input_boolean.turn_on
#       entity_id: input_boolean.toilet_occupancy

# - alias: toilet_occupancy_turn_off
#   id: toilet_occypancy_turn_off
#   initial_state: true
#   triggers:
#     - trigger: state
#       entity_id: binary_sensor.0x00158d0001ef2ffc_contact
#       to: "on"
#       for:
#         minutes: 3
#     - trigger: state
#       entity_id: binary_sensor.0x00158d000232ddd6_contact
#       to: "off"
#       from: "on"
#   conditions:
#     - condition: state
#       entity_id: input_boolean.toilet_occupancy
#       state: "on"
#   actions:
#     - action: input_boolean.turn_off
#       entity_id: input_boolean.toilet_occupancy

# ##################################
# Toilet - Donedeal
# ##################################
- alias: toilet_donedeal
  id: toilet_donedeal
  initial_state: true
  triggers:
    - trigger: event
      event_type: yandex_intent
      event_data:
        text: Я покакала
  actions:
    - action: media_player.play_media
      data:
        media_content_type: text
        entity_id: "{{ trigger.event.data.entity_id }}"
        media_content_id: "{{['С облегчением!','Так держать!','Красава!','Красавелла!','Рада за тебя!','Давай еще!']|random}}"
        extra:
          volume_level: '{{states("input_number.main_volume")|float(0)}}'
    - action: button.press
      entity_id: button.d1mini_air_freshener_spray
    - action: fan.turn_on
      entity_id: fan.esp32_node_b_fan_t
    - delay:
        seconds: 5
    - action: button.press
      entity_id: button.d1mini_air_freshener_spray

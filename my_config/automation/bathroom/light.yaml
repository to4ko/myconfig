# #####################################################################################
#
# BATHROOM
#
# #####################################################################################
# Bathroom - Light off auto
# ##################################
  - alias: bathroom_light_off_auto
    id: bathroom_light_off_auto
    mode: single
    max_exceeded: silent    
    initial_state: true
    triggers:
      - trigger: event
        event_type: timer.finished
        event_data:
          entity_id: timer.main_light_b
    #   - trigger: event
    #     event_type: timer.finished
    #     event_data:
    #       entity_id: timer.door_b
    conditions:
      - condition: state
        entity_id: binary_sensor.presence_b
        state: 'off'
      # - condition: template
      #   value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}"
      - condition: state
        entity_id: group.lights_b
        state: 'on'
    actions:
      - action: light.turn_off
        entity_id: light.0x00158d0002a36433_channel_2
      - action: light.turn_off
        entity_id: light.mirror_light_b
        data:
          transition: 5
  
# ##################################
# Bathroom - Light Timer start
# ##################################
  - alias: bathroom_light_timer_on
    id: bathroom_light_timer_on
    initial_state: true
    mode: single
    max_exceeded: silent
    triggers:
      - trigger: state
        entity_id: binary_sensor.presence_b
        from: 'on'
        to: 'off'
      - trigger: state
        entity_id: group.lights_b
        to: 'on'
    #conditions:
      # - condition: state
      #   entity_id: timer.main_light_b
      #   state: 'idle'
      # - condition: template
      #   value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}"
    actions:
      - action: timer.cancel
        entity_id: timer.main_light_b
      - action: timer.start
        entity_id: timer.main_light_b
  
# ##################################
# Bathroom - Timers stop
# ##################################
  - alias: bathroom_timer_stop
    id: bathroom_timer_stop
    initial_state: true
    triggers:
      - trigger: state
        entity_id: binary_sensor.presence_b
        from: 'off'
        to: 'on'
      - trigger: state
        entity_id: group.lights_b
        to: 'off'
    conditions:
      - condition: state
        entity_id: timer.main_light_b
        state: "active"
    actions:
      - action: timer.cancel
        entity_id: timer.main_light_b, timer.door_b

# ##################################
# Bathroom - Timers stop on motion with lights and presence
# ##################################
  - alias: bathroom_timer_stop_motion_with_light_presence
    id: bathroom_timer_stop_motion_with_light_presence
    initial_state: true
    triggers:
      - trigger: state
        entity_id: binary_sensor.0x00158d000236bc6d_motion
        to: 'on'
    conditions:
      and:
        - condition: state
          entity_id: binary_sensor.presence_b
          state: 'on'
        - condition: state
          entity_id: group.lights_b
          state: 'on'
        - or:
            - condition: state
              entity_id: timer.main_light_b
              state: "active"
            - condition: state
              entity_id: timer.door_b
              state: "active"
    actions:
      - action: timer.cancel
        entity_id: timer.main_light_b, timer.door_b

# ##################################
# Bathroom - Input on off
# ##################################
  - alias: bathroom_input_on_off
    id: bathroom_input_on_off
    mode: queued
    max: 10
    max_exceeded: silent
    initial_state: true
    triggers:
      - trigger: state
        entity_id: binary_sensor.wasp_b
        to: 'on'
        id: 'id_to_on'
      - trigger: state
        entity_id: binary_sensor.wasp_b
        to: 'off'
        id: 'id_to_off'
    actions:
      - choose:
          - conditions:
              - condition: trigger
                id: 'id_to_on'
              - condition: state
                entity_id: group.lights_b
                state: "on"
              - condition: state
                entity_id: switch.system_security_mode
                state: "off"
            sequence:
              - action: timer.pause
                entity_id: timer.main_light_b
              - action: input_boolean.turn_on
                data:
                  entity_id: input_boolean.bathroom_occupancy
          - conditions:
              - condition: trigger
                id: 'id_to_off'
            sequence:
              - action: input_boolean.turn_off
                data:
                  entity_id: input_boolean.bathroom_occupancy

# # ##################################
# # Bathroom - Door Timer on
# # ##################################
#   - alias: bathroom_door_timer_start
#     id: bathroom_door_timer_start
#     mode: queued
#     max: 10
#     max_exceeded: silent
#     initial_state: true
#     triggers:
#       - trigger: state
#         entity_id: group.lights_b
#         to: 'on'
#     conditions:
#       - condition: state
#         entity_id: binary_sensor.0x00158d0003f1b140_contact
#         state: "on"
#     actions:
#       - action: timer.cancel
#         entity_id: timer.door_b
#       - action: timer.start
#         entity_id: timer.door_b

# # ##################################
# # Bathroom - Door Timer Cancel
# # ##################################
#   - alias: bathroom_door_timer_cancel
#     id: bathroom_door_timer_cancel
#     mode: queued
#     max: 10
#     max_exceeded: silent
#     initial_state: true
#     triggers:
#       - trigger: state
#         entity_id: binary_sensor.presence_b
#         to: 'on'
#     conditions:
#       - condition: state
#         entity_id: timer.door_b
#         state: "active"
#     actions:
#       - action: timer.cancel
#         entity_id: timer.door_b

                  
# # ##################################
# # Bathroom - Timer pause off
# # ##################################
#   - alias: bathroom_timer_pause_off
#     id: bathroom_timer_pause_off
#     initial_state: true
#     triggers:
#       # - platform: state
#       #   entity_id: binary_sensor.0x00158d0003f1b140_contact
#       #   from: "off"
#       #   to: "on"
#       - trigger: state
#         entity_id: binary_sensor.wasp_b
#         to: 'off'
#     conditions:
#       - condition: state
#         entity_id: group.lights_b
#         state: "on"
#     actions:
#       - action: timer.cancel
#         entity_id: timer.main_light_b
#       - action: timer.start
#         entity_id: timer.main_light_b
#       - action: input_boolean.turn_off
#         data:
#           entity_id: input_boolean.bathroom_occupancy
      
# ##################################
# Bathroom - Occupancy off
# ##################################
  # - alias: bathroom_occupancy_off
  #   id: bathroom_occupancy_off
  #   initial_state: true
  #   triggers:
  #     # - platform: state
  #     #   entity_id: binary_sensor.0x00158d0003f1b140_contact
  #     #   from: "off"
  #     #   to: "on"
  #     - trigger: state
  #       entity_id: binary_sensor.wasp_b
  #       to: 'off'
  #   conditions:
  #     - condition: state
  #       entity_id: input_boolean.bathroom_occupancy
  #       state: "on"
  #     # - condition: state
  #     #   entity_id: binary_sensor.0x00158d000236bc6d_motion
  #     #   state: 'off'
  #     #   for: "00:00:30"
  #   actions:
  #     - action: input_boolean.turn_off
  #       data:
  #         entity_id: input_boolean.bathroom_occupancy
  
# ##################################
# Bathroom - Auto Light On Soft
# ##################################
  - alias: bathroom_auto_light_on_soft
    id: bathroom_auto_light_on_soft
    mode: single
    max_exceeded: silent    
    initial_state: true
    triggers:
      - trigger: event
        event_type: xiaomi_aqara.motion
        event_data:
          entity_id: binary_sensor.0x00158d000236bc6d_motion
      # - platform: state
      #   entity_id: binary_sensor.0x00158d0003f1b140_contact
      #   from: "off"
      #   to: "on"
    conditions:
      - condition: state
        entity_id: group.lights_b
        state: "off"
      - condition: state
        entity_id: switch.system_security_mode
        state: "off"
      # - condition: template
      #   value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}"
    actions:
      - action: xiaomi_miio.light_set_scene
        data:
          entity_id: light.mirror_light_b
          scene: >-
            {{4 if (is_state('binary_sensor.tod_day','off') or is_state('switch.system_dark_mode','on')) else 1}}
  
# ##################################
# Bathroom - Auto Light Off
# ##################################
  # - alias: bathroom_auto_light_off
  #   id: bathroom_auto_light_off
  #   initial_state: true
  #   triggers:
  #     - trigger: event
  #       event_type: timer.finished
  #       event_data:
  #         entity_id: timer.main_light_b
  #   actions:
  #     - action: light.turn_off
  #       entity_id: light.0x00158d0002a36433_channel_2
  #     - action: light.turn_off
  #       entity_id: light.mirror_light_b
  #       data:
  #         transition: 5
  
# ##################################
# Bathroom - Light Toggle with Repeater
# ##################################
  - alias: bathroom_light_toggle_repeater
    id: bathroom_light_toggle_repeater
    initial_state: true
    triggers:
      - trigger: event
        event_type: xiaomi_aqara.click
        event_data:
          entity_id: sensor.0x54ef4410005054cc_action
          click_type: button_1_single
    actions:
      - choose:
          - conditions:
              - condition: state
                entity_id: group.lights_b
                state: "on"
            sequence:
              - action: light.turn_off
                entity_id: light.0x00158d0002a36433_channel_2, light.mirror_light_b
          - conditions:
              - condition: state
                entity_id: group.lights_b
                state: "off"
            sequence:
              - action: light.turn_on
                entity_id: light.0x00158d0002a36433_channel_2
  
# ##################################
# Bathroom - Mirror Light Manual
# ##################################
  - alias: bathroom_mirror_light_manual
    id: bathroom_mirror_light_manual
    mode: single
    max_exceeded: silent    
    initial_state: true
    triggers:
      - trigger: event
        event_type: xiaomi_aqara.click
        event_data:
          entity_id: sensor.0x00158d0001ef6089_action
    conditions:
      - condition: template
        value_template: "{{ states('light.mirror_light_b') in ['on','off'] }}"
      # - condition: template
      #   value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}"
    actions:
      - choose:
          - conditions:
              - condition: state
                entity_id: light.mirror_light_b
                state: "on"
              - condition: template
                value_template: "{{ trigger.event.data.click_type == 'single' }}"
            sequence:
              - action: light.turn_off
                entity_id: light.mirror_light_b
          - conditions:
              - condition: state
                entity_id: light.mirror_light_b
                state: "off"
              - condition: state
                entity_id: light.0x00158d0002a36433_channel_2
                state: "off"
              - condition: template
                value_template: "{{ trigger.event.data.click_type == 'single' }}"
            sequence:
              - action: xiaomi_miio.light_set_scene
                data:
                  entity_id: light.mirror_light_b
                  scene: 4
          - conditions:
              - condition: state
                entity_id: light.mirror_light_b
                state: "off"
              - condition: state
                entity_id: light.0x00158d0002a36433_channel_2
                state: "on"
              - condition: template
                value_template: "{{ trigger.event.data.click_type == 'single' }}"
            sequence:
              - action: xiaomi_miio.light_set_scene
                data:
                  entity_id: light.mirror_light_b
                  scene: 1
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.click_type == 'double' }}"
            sequence:
              - action: xiaomi_miio.light_set_scene
                data:
                  entity_id: light.mirror_light_b
                  scene: 1
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.click_type == 'hold' }}"
            sequence:
              - action: xiaomi_miio.light_set_scene
                data:
                  entity_id: light.mirror_light_b
                  scene: 4
  
# ##################################
# Bathroom - Mirror Light Restart
# ##################################
  - alias: bathroom_mirror_light_restart
    id: bathroom_mirror_light_restart
    mode: single
    max_exceeded: silent    
    initial_state: true
    triggers:
      - trigger: time_pattern
        minutes: "/1"
      # - platform: state
      #   entity_id: light.mirror_light_b
      #   to: 'unavailable'
      #   for:
      #     minutes: 2
      # - platform: numeric_state
      #   entity_id: sensor.ha_uptime
      #   above: 0
      #   below: 2
    conditions:
      - condition: state
        entity_id: light.mirror_light_b
        state: "unavailable"
        for:
          minutes: 2
      # - condition: template
      #   value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}"
      - condition: state
        entity_id: switch.system_mirror_light_b_restart_key
        state: 'on'
      - condition: template
        value_template: >
          {% set ignore = ['unknown', 'unavailable', 'none'] %}
          {{ states('switch.esp32_node_b_relay_5') not in ignore }}        
    actions:
      - repeat:
          while:
            - condition: state
              entity_id: light.mirror_light_b
              state: "unavailable"
            - condition: template
              value_template: "{{ repeat.index <= 5 }}"
          sequence:
            - action: switch.turn_off
              entity_id: switch.esp32_node_b_relay_5
            - delay:
                seconds: 15
            - action: switch.turn_on
              entity_id: switch.esp32_node_b_relay_5
            - action: notify.telegram
              data:
                message: "\U0001f6a8 Mirror LED B restart done({{repeat.index}})!"
            - delay:
                seconds: 30
      - condition: state
        entity_id: light.mirror_light_b
        state: 'unavailable'
      - action: notify.telegram
        data:
          message: "\U0001f6a8 Mirror LED B restart unsuccessful!"
      - action: switch.turn_off
        entity_id: switch.system_mirror_light_b_restart_key
  
# ##################################
# Hall Big - Mirror LED Auto Restart Key Toggle
# ##################################
  - alias: bathroom_mirror_led_restart_key_toggle
    id: bathroom_mirror_led_restart_key_toggle
    initial_state: true
    mode: single
    max_exceeded: silent
    triggers:
      - trigger: state
        entity_id: light.mirror_light_b
        from: 'unavailable'
    actions:
      - action: switch.turn_on
        entity_id: switch.system_mirror_light_b_restart_key
  
# ##################################
# Bathroom - Indicator
# ##################################
  - alias: bathroom_indicator
    id: bathroom_indicator
    initial_state: true
    mode: single
    max_exceeded: silent
    triggers:
      - trigger: state
        entity_id: input_boolean.bathroom_occupancy
        to:
    conditions:
      - condition: template
        value_template: "{{ states('input_boolean.bathroom_occupancy') in ['on','off'] }}"
    actions:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.bathroom_occupancy
                state: "off"
            sequence:
              - action: light.turn_off
                entity_id: light.esp32_node_hs_bathroom
          - conditions:
              - condition: state
                entity_id: input_boolean.bathroom_occupancy
                state: "on"
            sequence:
              - action: light.turn_on
                data:
                  entity_id: light.esp32_node_hs_bathroom
                  effect: "Color Wipe"
                  brightness: 100

# ##################################
# Bathroom - Mirror light sync
# ##################################
  - alias: bathroom_mirror_light_sync
    id: bathroom_mirror_light_sync
    initial_state: true
    mode: queued
    max: 10
    max_exceeded: silent
    triggers:
      - trigger: state
        entity_id: light.0x00158d0002a36433_channel_2
        to: "off"
        from: "on"
        id: "to_off"
      - trigger: state
        entity_id: light.0x00158d0002a36433_channel_2
        to: "on"
        from: "off"
        id: "to_on"
    actions:
      - choose:
          - conditions:
              - condition: trigger
                id: "to_off"
              - condition: state
                entity_id: light.mirror_light_b
                state: "on"
            sequence:
              - action: light.turn_off
                entity_id: light.mirror_light_b
                data:
                  transition: 5
          - conditions:
              - condition: trigger
                id: "to_on"
              - condition: state
                entity_id: light.mirror_light_b
                state: "on"
            sequence:
              - action: xiaomi_miio.light_set_scene
                data:
                  entity_id: light.mirror_light_b
                  scene: 1

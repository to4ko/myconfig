# #####################################################################################
#
# KITCHEN - General
#
# #####################################################################################
# Kitchen - briefing
# ##################################
  - alias: kitchen_briefing
    id: kitchen_briefing
    initial_state: true
    triggers:
      - trigger: time
        at: "07:05:00"
      - trigger: homeassistant
        event: start
    conditions:
      - condition: time
        after: "07:00:00"
        before: "07:15:00"
      - condition: template
        value_template: "{{(as_timestamp(now())|int(0) - as_timestamp(state_attr('automation.kitchen_briefing', 'last_triggered'),0)|int(0)) > 15*60 }}"
      - condition: state
        entity_id: binary_sensor.workday_sensor
        state: "on"
    actions:
    #   - action: notify.telegram
    #     data:
    #       message: "Ждем триггер для брифинга"
      - action: input_number.set_value
        data:
          entity_id: input_number.main_volume
          value: "0.4"
      - wait_for_trigger:
          - trigger: event
            event_type: xiaomi_aqara.motion
            event_data:
              entity_id: binary_sensor.0x00158d0002b4729d_motion
          - trigger: event
            event_type: xiaomi_aqara.motion
            event_data:
              entity_id: binary_sensor.0x00158d0002b48381_motion
        timeout:
          minutes: 15
        continue_on_timeout: false
      - action: script.briefing_tts
        data:
          entity_id: media_player.yandex_k
          volume_level: '{{states("input_number.main_volume")|float(0)}}'
  
# ##################################
# Kitchen - Smoke Detected
# ##################################
  - alias: kitchen_smoke_detected
    id: kitchen_smoke_detected
    initial_state: true
    triggers:
      - trigger: state
        entity_id: binary_sensor.0x00158d0002c92f31_smoke
        to: "on"
    actions:
      - action: notify.telegram
        data:
          message: "\U000026d4 Внимание! Сработал датчик дыма!"
  
# ##################################
# Kitchen - Gas Detected
# ##################################
  - alias: kitchen_gas_detected
    id: kitchen_gas_detected
    initial_state: true
    triggers:
      - trigger: state
        entity_id: binary_sensor.0x00158d00024bcf85_gas
        to: "on"
    actions:
      - action: notify.telegram
        data:
          message: "\U000026d4 Внимание! Сработал датчик газа!"
  
# ##################################
# Kitchen - Kettle counter
# ##################################
  - alias: kitchen_kettle_count
    id: kitchen_kettle_count
    initial_state: true
    triggers:
      # - platform: state
      #   entity_id: sensor.mi_kettle_state
      #   to: "ON"
      - trigger: state
        entity_id: binary_sensor.kettle_boil_k
        from: "off"
        to: "on"
    actions:
      - action: counter.increment
        entity_id: counter.kettle_k
  
# # ##################################
# # Kitchen - RO Filter Usage
# # ##################################
#   - alias: kitchen_ro_filter_usage
#     id: kitchen_ro_filter_usage
#     initial_state: true
#     triggers:
#       - trigger: time
#         at: "00:00:10"
#     actions:
#       - action: input_number.set_value
#         data:
#           entity_id: input_number.ro_filter1_usage
#           value: "{{ (states('input_number.ro_filter1_usage') | float(0) + states('sensor.water_raw_yesterday') | float(0)) | round(2, 'common') }}"
#       - action: input_number.set_value
#         data:
#           entity_id: input_number.ro_filter2_usage
#           value: "{{ (states('input_number.ro_filter2_usage') | float(0) + states('sensor.water_raw_yesterday') | float(0)) | round(2, 'common') }}"
#       - action: input_number.set_value
#         data:
#           entity_id: input_number.ro_filter3_usage
#           value: "{{ (states('input_number.ro_filter3_usage') | float(0) + states('sensor.water_raw_yesterday') | float(0)) | round(2, 'common') }}"
#       - action: input_number.set_value
#         data:
#           entity_id: input_number.ro_membrane_usage
#           value: "{{ (states('input_number.ro_membrane_usage') | float(0) + states('sensor.water_raw_yesterday') | float(0)) | round(2, 'common') }}"
#       - action: input_number.set_value
#         data:
#           entity_id: input_number.ro_postfilter_usage
#           value: "{{ (states('input_number.ro_postfilter_usage') | float(0) + states('sensor.water_mineralized_yesterday') | float(0) + states('sensor.water_nonmineralized_yesterday') | float(0)) | round(2, 'common')}}"
#       - action: input_number.set_value
#         data:
#           entity_id: input_number.ro_mineralizer_usage
#           value: "{{ (states('input_number.ro_mineralizer_usage') | float(0) + states('sensor.water_mineralized_yesterday') | float(0)) | round(2, 'common') }}"
#       - action: notify.telegram
#         data:
#           message: "\U0001f4a7 Данные фильтра воды обновлены! Износ: {{states('sensor.ro_filter1_wearing')}}%, {{states('sensor.ro_filter2_wearing')}}%, {{states('sensor.ro_filter3_wearing')}}%, {{states('sensor.ro_membrane_wearing')}}%, {{states('sensor.ro_mineralizer_wearing')}}%, {{states('sensor.ro_postfilter_wearing')}}%"
  
# # ##################################
# # Kitchen - RO Filter Wearing Level
# # ##################################
#   - alias: kitchen_ro_filter_wearing_level
#     id: kitchen_ro_filter_wearing_level
#     initial_state: true
#     triggers:
#       - trigger: state
#         entity_id:
#           - sensor.ro_filter1_wearing
#           - sensor.ro_filter2_wearing
#           - sensor.ro_filter3_wearing
#           - sensor.ro_membrane_wearing
#           - sensor.ro_mineralizer_wearing
#           - sensor.ro_postfilter_wearing
#         to:
#     conditions:
#       - condition: template
#         value_template: "{{ trigger.to_state.state|int(0) % 2 == 0 }}"
#       - condition: template
#         value_template: "{{ trigger.to_state.state|int(0) > 90 }}"
#       - condition: template
#         value_template: >
#           {% set ignore = ['unknown', 'unavailable', 'none'] %}
#           {{ trigger.from_state.state not in ignore and
#             trigger.to_state.state not in ignore and
#             trigger.to_state.state != trigger.from_state.state }}
#       - condition: template
#         value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}"
#     actions:
#       - action: notify.telegram
#         data:
#           message: >-
#             {{'\U0001f4a7'}} Износ
#             {%- if 'filter1' in trigger.entity_id %} фильтра №1
#             {%- elif 'filter2' in trigger.entity_id %} фильтра №2
#             {%- elif 'filter3' in trigger.entity_id %} фильтра №3
#             {%- elif 'membrane' in trigger.entity_id %} мембраны
#             {%- elif 'mineralizer' in trigger.entity_id %} минерализатора
#             {%- elif 'postfilter' in trigger.entity_id %} постфильтра
#             {%-else%} ХХХ
#             {%-endif%} больше 95%. Требуется замена!

# ##################################
# Kitchen - Oven notify
# ##################################
  - alias: kitchen_oven_notify
    id: kitchen_oven_notify
    initial_state: true
    triggers:
      - trigger: time_pattern
        minutes: "/30"
    conditions:
      - condition: numeric_state
        entity_id: sensor.esp8266_oven_temp_k
        above: 100
      - condition: state
        entity_id: binary_sensor.motion_k
        state: "off"
        for: "00:30:00"
    actions:
      - action: notify.telegram
        data:
          message: "\U0001f321 Внимание! Духовка включена ({{states('sensor.esp8266_oven_temp_k')|int(0)}}°C)!"
  
# ##################################
# Kitchen - TV Plug Off
# ##################################
  - alias: kitchen_tv_plug_off
    id: kitchen_tv_plug_off
    initial_state: true
    triggers:
      - trigger: state
        entity_id: binary_sensor.presence_k
        to: "off"
        for:
          minutes: 30
    conditions:
      - condition: time
        after: "00:00:00"
        before: "06:00:00"
      - condition: state
        entity_id: switch.0x00158d0001e85086_plug
        state: "on"
    actions:
      - action: switch.turn_off
        entity_id: switch.0x00158d0001e85086_plug
  
# ##################################
# Kitchen - TV Plug On
# ##################################
  - alias: kitchen_tv_plug_on
    id: kitchen_tv_plug_on
    initial_state: true
    triggers:
      - trigger: state
        entity_id: binary_sensor.presence_k
        to: "on"
        from: "off"
    conditions:
      - condition: time
        after: "06:00:00"
      - condition: time
        before: "08:00:00"
      - condition: state
        entity_id: switch.0x00158d0001e85086_plug
        state: "off"
      - condition: state
        entity_id: switch.system_security_mode
        state: "off"
    actions:
      - action: switch.turn_on
        entity_id: switch.0x00158d0001e85086_plug
  
# ##################################
# Kitchen - Oven Target Temp
# ##################################
  - alias: kitchen_oven_notify_target_temp
    id: kitchen_oven_notify_target_temp
    initial_state: true
    triggers:
      - trigger: event
        event_type: automation_reloaded
      - trigger: state
        entity_id: binary_sensor.esp8266_oven_temp_k_oven_state
        to: "on"
    conditions:
      - condition: template
        value_template: "{{ states('sensor.oven_target_temperature')|int(0) > 100 }}"
      - condition: template
        value_template: "{{as_timestamp(now()) - as_timestamp(state_attr('automation.kitchen_oven_notify_target_temp', 'last_triggered'),0) > 60*60 }}"
      - condition: state
        entity_id: binary_sensor.esp8266_oven_temp_k_oven_state
        state: "on"
    actions:
      - wait_for_trigger:
          - trigger: template
            value_template: "{{ states('sensor.esp8266_oven_temp_k')|int(0) >= states('sensor.oven_target_temperature')|int(0) }}"
        timeout:
          minutes: 60
        continue_on_timeout: false
      - action: notify.telegram
        data:
          message: "\U0001f321 Духовка нагрелась до {{states('sensor.esp8266_oven_temp_k')|int(0)}}°C!"
      - if:
          - condition: state
            entity_id: binary_sensor.tod_day
            state: "on"
          - condition: state
            entity_id: switch.system_dark_mode
            state: "off" 
        then:
          - action: media_player.volume_set
            data:
              entity_id: media_player.yandex_k
              volume_level: '{{states("input_number.main_volume")|float(0)}}'
          # - action: tts.yandextts_say
          #   data:
          #     entity_id: media_player.home_mini_k
          #     message: "Температура духовки ({{states('sensor.esp8266_oven_temp_k')|int(0)}}°C"
          - action: media_player.play_media
            data:
              media_content_type: "{{ states('input_select.alice_mode') }}"
              entity_id: media_player.yandex_k
              media_content_id: "Температура в духовке ({{states('sensor.esp8266_oven_temp_k')|int(0)}}°C"

# ##################################
# Kitchen - Oven Target Temp to Alice
# ##################################
  - alias: kitchen_oven_notify_to_alice
    id: kitchen_oven_notify_to_alice
    initial_state: true
    triggers:
      - trigger: event
        event_type: yandex_intent
        event_data:
          text: Какая температура в духовке
    actions:
      - action: media_player.volume_set
        data:
          entity_id: media_player.yandex_k
          volume_level: '{{states("input_number.main_volume")|float(0)}}'
      # - action: tts.yandextts_say
      #   data:
      #     entity_id: media_player.home_mini_k
      #     message: "Температура духовки ({{states('sensor.esp8266_oven_temp_k')|int(0)}}°C"
      - action: media_player.play_media
        data:
          media_content_type: "{{ states('input_select.alice_mode') }}"
          entity_id: media_player.yandex_k
          media_content_id: "Температура в духовке ({{states('sensor.esp8266_oven_temp_k')|int(0)}}°C"


# ##################################
# Kitchen - Dishwasher state
# ##################################
  - alias: kitchen_today_dishwasher
    id: kitchen_today_dishwasher
    initial_state: true
    triggers:
      - trigger: event
        event_type: yandex_intent
        event_data:
          text: Кто моет посуду
    actions:
      - action: media_player.play_media
        data:
          media_content_type: "{{ states('input_select.alice_mode') }}"
          entity_id: '{{ trigger.event.data.entity_id }}'
          media_content_id: "Сегодня посуду моет {% if is_state('input_select.dishwasher','Vova') %}{{['Вова','Володя','Владимир','Вовчик','Вовка']|random}}{%else%}{{['Саша','Санёк','Александр','Сашка']|random}}{%endif%}"
          extra:
            volume_level: '{{states("input_number.main_volume")|float(0)}}'
            
# # ##################################
# # Kitchen - Air Fryer Finish
# # ##################################
#   - alias: kitchen_airfryer_finish
#     id: kitchen_airfryer_finish
#     initial_state: true
#     triggers:
#       - trigger: state
#         entity_id: sensor.air_fryer_status
#         from: 'coocking'
#         to: 'cooked'
#     conditions:
#       - condition: state
#         entity_id: binary_sensor.tod_day
#         state: 'on'
#     actions:
#       - action: media_player.play_media
#         data:
#           media_content_type: "{{ states('input_select.alice_mode') }}"
#           entity_id: media_player.yandex_k
#           media_content_id: "Гриль завершил работу!"
#           extra:
#             volume_level: '{{states("input_number.main_volume")|float(0)}}'

# ##################################
# Kitchen - RO Pump Reset
# ##################################
  # - alias: kitchen_ro_pump_reset
  #   id: kitchen_ro_pump_reset
  #   initial_state: true
  #   triggers:
  #     - trigger: state
  #       entity_id: binary_sensor.ro_pump_stale
  #       from: 'off'
  #       to: 'on'
  #   actions:
  #     - action: switch.turn_off
  #       entity_id: switch.0x00158d00039258de_plug
  #     - delay:
  #         seconds: 5
  #     - action: switch.turn_on
  #       entity_id: switch.0x00158d00039258de_plug

# ##################################
# Kitchen - TV plug On by ALice
# ##################################
  # - alias: kitchen_tv_plug_on_alice
  #   id: kitchen_tv_plug_on_alice
  #   initial_state: true
  #   triggers:
  #     - trigger: event
  #       event_type: yandex_intent
  #       event_data:
  #         text: Включи розетку телевизора
  #       id: 'on'
  #     - trigger: event
  #       event_type: yandex_intent
  #       event_data:
  #         text: Выключи розетку телевизора
  #       id: 'off'
  #   conditions:
  #     - condition: template
  #       value_template: "{{ trigger.event.data.entity_id == 'media_player.yandex_k' }}"
  #   actions:
  #     - action: 'switch.turn_{{ trigger.id }}'
  #       entity_id: switch.0x00158d0001e85086_plug
        
# ##################################
# Kitchen - TV plug On by button
# ##################################
  - alias: kitchen_tv_plug_toggle_button
    id: kitchen_tv_plug_toggle_button
    initial_state: true
    triggers:
      - trigger: event
        event_type: xiaomi_aqara.click
        event_data:
          entity_id: sensor.0x00158d0001ef61be_action
          click_type: single
    actions:
      - action: switch.toggle
        entity_id: switch.0x00158d0001e85086_plug

# ##################################
# Kitchen - Fan Control Alice
# ##################################
  - alias: system_fan_control_alice
    id: system_fan_control_alice
    initial_state: true
    mode: parallel
    triggers:
      - trigger: event
        event_type: yandex_intent
        event_data:
          text: Выключи вентиляцию
        id: 'off'
      - trigger: event
        event_type: yandex_intent
        event_data:
          text: Включи вентиляцию
        id: 'on'
    conditions:
      - condition: state
        entity_id: switch.system_security_mode
        state: 'off'
      - condition: template
        value_template: "{{ trigger.event.data.entity_id == 'media_player.yandex_k' }}"
    actions:
      - action: 'fan.turn_{{ trigger.id }}'
        entity_id: fan.esp8266_hood_k_fan
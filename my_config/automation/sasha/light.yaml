# #####################################################################################
#
# SASHA - Lights
#
# #####################################################################################
# Sasha Table Lamp (Philips E27)
# ##################################
  - alias: sasha_led_white_control
    id: sasha_led_white_control
    initial_state: true
    mode: single
    max_exceeded: silent
    triggers:
      # - platform: event
      #   event_type: xiaomi_aqara.click
      #   event_data:
      #     entity_id: sensor.0x158d0001f3627d_action
      - trigger: event
        event_type: xiaomi_aqara.click
        event_data:
          entity_id: sensor.0x04cf8cdf3c77d831_action
    conditions:
      - condition: template
        value_template: "{{ states('light.0x54ef441000d54c6c_light') in ['on','off'] }}"
      # - condition: template
      #   value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}"
    actions:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.click_type == 'single'  or trigger.event.data.click_type == 'button_1_single'}}"
            sequence:
              - action: light.toggle
                entity_id: light.0x54ef441000d54c6c_light
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.click_type == 'double' or trigger.event.data.click_type == 'button_1_double' }}"
            sequence:
              - action: light.turn_on
                entity_id: light.0x54ef441000d54c6c_light
                data:
                  brightness: 255
                  color_temp_kelvin: 5000
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.click_type == 'hold' or trigger.event.data.click_type == 'button_1_hold' }}"
            sequence:
              - action: light.turn_on
                entity_id: light.0x54ef441000d54c6c_light
                data:
                  brightness: 14
                  color_temp_kelvin: 3000
  
# ##################################
# Sasha - Main Lamp (Xiaomi Round LED)
# ##################################
  - alias: sasha_main_lamp_left_button
    id: sasha_main_lamp_left_button
    initial_state: true
    mode: single
    max_exceeded: silent
    triggers:
      - trigger: event
        event_type: xiaomi_aqara.click
        event_data:
          entity_id: sensor.0x00158d00026eb820_action
          click_type: button_1_single
    conditions:
      - condition: template
        value_template: "{{ states('light.square_led_s') in ['on','off'] }}"
      # - condition: template
      #   value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}"
    actions:
      - if:
          - condition: state
            entity_id: binary_sensor.square_led_s_nightlight
            state: 'on'
          - condition: state
            entity_id: light.square_led_s
            state: 'off'
        then:
          - action: yeelight.set_mode
            data:
              entity_id: light.square_led_s
              mode: normal  
      - choose:
          - conditions:
              - condition: state
                entity_id: light.square_led_s
                state: 'on'
            sequence:
              - action: light.turn_off
                entity_id: light.square_led_s
          - conditions:
              - condition: state
                entity_id: light.square_led_s
                state: 'off'
            sequence:
              - action: light.turn_on
                entity_id: light.square_led_s
                data:
                  brightness: 230
                  color_temp_kelvin: 5000
  
# ##################################
# Sasha - Main Lamp (Xiaomi Round LED)
# ##################################
  - alias: sasha_main_lamp_right_button
    id: sasha_main_lamp_right_button
    initial_state: true
    mode: single
    max_exceeded: silent
    triggers:
      - trigger: event
        event_type: xiaomi_aqara.click
        event_data:
          entity_id: sensor.0x00158d00026eb820_action
          click_type: button_2_single
    conditions:
      - condition: template
        value_template: "{{ states('light.square_led_s') in ['on','off'] }}"
      # - condition: template
      #   value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}"
    actions:
      - if:
          - condition: state
            entity_id: binary_sensor.square_led_s_nightlight
            state: 'on'
          - condition: state
            entity_id: light.square_led_s
            state: 'off'
        then:
          - action: yeelight.set_mode
            data:
              entity_id: light.square_led_s
              mode: normal  
      - choose:
          - conditions:
              - condition: state
                entity_id: light.square_led_s
                state: 'on'
            sequence:
              - action: light.turn_off
                entity_id: light.square_led_s
          - conditions:
              - condition: state
                entity_id: light.square_led_s
                state: 'off'
            sequence:
              - action: light.turn_on
                entity_id: light.square_led_s
                data:
                  brightness: 14
                  color_temp_kelvin: 3000
  
# ##################################
# Sasha - Table Lamp Off (scene4) when main turned on
# ################################## 
  - alias: sasha_table_lamp_off_night_mode_main_on
    id: sasha_table_lamp_off_night_mode_main_on
    initial_state: true
    triggers:
      - trigger: state
        entity_id: light.0x54ef441000d54c6c_light
        to:
      - trigger: homeassistant
        event: start
      - trigger: event
        event_type: automation_reloaded
    conditions:
      - condition: template
        value_template: "{{state_attr('light.0x54ef441000d54c6c_light','brightness')|int(0) < 10}}"
      - condition: state
        entity_id: light.square_led_s
        state: 'on'
      - condition: state
        entity_id: light.0x54ef441000d54c6c_light
        state: 'on'
      - condition: state
        entity_id: binary_sensor.tod_day
        state: 'on'
    actions:
      - action: light.turn_off
        entity_id: light.0x54ef441000d54c6c_light
  
  # ##################################
  # Sasha - Auto Night Light
  # ##################################
  # - alias: sasha_auto_nightlight_on
  #   initial_state: false
  #   triggers:
  #     - trigger: state
  #       entity_id: binary_sensor.0x00158d000224f89f_motion, binary_sensor.0x00158d000224f89f_motion
  #       #from: 'off'
  #       to: 'on'
  #   conditions:
  #     - condition: and
  #       conditions:
  #         - condition: state
  #           entity_id: binary_sensor.tod_day
  #           state: 'off'
  #         - condition: state
  #           entity_id: person.sasha
  #           state: 'home'
  #   actions:
  #     - action: light.turn_on
  #       entity_id: light.led_white_s
  #       data:
  #         brightness: 14
  #         color_temp_kelvin: 3000      
  
# ##################################
# Sasha - Auto Night Light Off 30m without movements
# ##################################
  - alias: sasha_night_auto_off_30m
    id: sasha_night_auto_off_30m
    initial_state: true
    triggers:
      - trigger: state
        entity_id: binary_sensor.motion_s
        from: 'on'
        to: 'off'
        for:
          minutes: 30
    conditions:
      - condition: state
        entity_id: binary_sensor.tod_day
        state: 'off'
    actions:
      - action: light.turn_off
        entity_id: light.0x54ef441000d54c6c_light
        data:
          transition: 5
  
# ##################################
# Sasha - Square LED Reset 
# ##################################
  - alias: sasha_square_led_restart
    id: sasha_square_led_restart
    mode: single
    max_exceeded: silent    
    initial_state: true
    triggers:
      - trigger: time_pattern
        minutes: "/1"
      # - platform: state
      #   entity_id: light.square_led_s
      #   to: 'unavailable'
      #   for:
      #     minutes: 2
      # - platform: numeric_state
      #   entity_id: sensor.ha_uptime
      #   above: 0
      #   below: 2
    conditions:
      - condition: state
        entity_id: light.square_led_s
        state: 'unavailable'
        for:
          minutes: 2
      # - condition: template
      #   value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}"
      - condition: state
        entity_id: switch.system_square_led_s_restart_key
        state: 'on'
      - condition: template
        value_template: >
          {% set ignore = ['unknown', 'unavailable', 'none'] %}
          {{ states('switch.shelly_1_led_s') not in ignore }}
    actions:
      - repeat:
          while:
            - condition: state
              entity_id: light.square_led_s
              state: "unavailable"
            - condition: template
              value_template: "{{ repeat.index <= 5 }}"
          sequence:
            - action: switch.turn_off
              entity_id: switch.shelly_1_led_s
            - delay:
                seconds: 15
            - action: switch.turn_on
              entity_id: switch.shelly_1_led_s
            - action: notify.telegram
              data:
                message: "\U0001f6a8 Square LED S restart done({{repeat.index}})!"
            - delay:
                seconds: 30
      - condition: state
        entity_id: light.square_led_s
        state: 'unavailable'
      - action: notify.telegram
        data:
          message: "\U0001f6a8 Square LED S restart unsuccessful!"
      - action: switch.turn_off
        entity_id: switch.system_square_led_s_restart_key
  
# ##################################
# Sasha - Square LED Auto Restart Key Toggle
# ##################################
  - alias: sasha_square_led_restart_key_toggle
    id: sasha_square_led_restart_key_toggle
    initial_state: true
    mode: single
    max_exceeded: silent
    triggers:
      - trigger: state
        entity_id: light.square_led_s
        from: 'unavailable'
    actions:
      - action: switch.turn_on
        entity_id: switch.system_square_led_s_restart_key
  
# ##################################
# Sasha - Turn Lamp Switch On if Off
# ##################################
  - alias: sasha_main_lamp_switch_on_if_off
    id: sasha_main_lamp_switch_on_if_off
    initial_state: true
    triggers:
      - trigger: event
        event_type: xiaomi_aqara.click
        event_data:
          entity_id: sensor.0x00158d00026eb820_action
    conditions:
      - condition: state
        entity_id: switch.shelly_1_led_s
        state: 'off'
    actions:
      - action: switch.turn_on
        entity_id: switch.shelly_1_led_s
  
# ##################################
# Sasha - Timer restart with movement
# ################################## 
  - alias: sasha_timer_restart
    id: sasha_timer_restart
    initial_state: true
    mode: single
    max_exceeded: silent
    triggers:
      - trigger: event
        event_type: xiaomi_aqara.motion
        event_data:
          entity_id: binary_sensor.0x00158d000224f89f_motion
      - trigger: event
        event_type: xiaomi_aqara.motion
        event_data:
          entity_id: binary_sensor.0x00158d0003140824_motion
    conditions:
      - condition: state
        entity_id: light.square_led_s
        state: 'on'
      - condition: template
        value_template: "{{(as_timestamp(now())-as_timestamp(state_attr('automation.sasha_timer_restart', 'last_triggered'),0)|int(0)) > 15 }}"
      - condition: state
        entity_id: switch.system_security_mode
        state: 'off'
      # - condition: template
      #   value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}"
    actions:
      - action: timer.cancel
        entity_id: timer.main_light_s
      - action: timer.start
        entity_id: timer.main_light_s
  
# ##################################
# Sasha - Timer off
# ################################## 
  - alias: sasha_timer_off
    id: sasha_timer_off
    initial_state: true
    triggers:
      - trigger: state
        entity_id: light.square_led_s
        to: 'off'
        from: 'on'
    actions:
      - action: timer.cancel
        entity_id: timer.main_light_s
  
# ##################################
# Sasha - Timer start on light on
# ################################## 
  - alias: sasha_timer_on
    id: sasha_timer_on
    initial_state: true
    triggers:
      - trigger: state
        entity_id: light.square_led_s
        to: 'on'
        from: 'off'
    conditions:
      - condition: state
        entity_id: switch.system_security_mode
        state: 'off'  
    actions:
      - action: timer.cancel
        entity_id: timer.main_light_s
      - action: timer.start
        entity_id: timer.main_light_s
  
# ##################################
# Sasha - Auto Light Off
# ##################################
  - alias: sasha_auto_light_off
    id: sasha_auto_light_off
    initial_state: true
    triggers:
      - trigger: event
        event_type: timer.finished
        event_data:
          entity_id: timer.main_light_s
    conditions:
      - condition: state
        entity_id: binary_sensor.tod_day
        state: 'on'
    actions:
      - action: light.turn_off
        entity_id: light.square_led_s
        data:
          transition: 5
  
# ##################################
# Sasha - LED Strip Control with round key
# ##################################
  - alias: sasha_led_strip_control
    id: sasha_led_strip_control
    mode: single
    max_exceeded: silent    
    initial_state: true
    triggers:
      # - platform: event
      #   event_type: xiaomi_aqara.click
      #   event_data:
      #     entity_id: sensor.0x158d00019c8afd_action
      - trigger: event
        event_type: xiaomi_aqara.click
        event_data:
          entity_id: sensor.0x04cf8cdf3c77d831_action
    conditions:
      - condition: template
        value_template: "{{ states('light.esp32_node_s_led') in ['on','off'] }}"
      # - condition: template
      #   value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}" 
    actions:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.click_type == 'single' or trigger.event.data.click_type == 'button_2_single' }}"
            sequence:
              - action: light.turn_on
                data:
                  entity_id: light.esp32_node_s_led
                  effect: '{{ (["Random", "Rainbow", "Color Wipe", "Scan", "Twinkle", "Random Twinkle"] | random) }}'
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.click_type == 'double' or trigger.event.data.click_type == 'button_2_double' }}"
            sequence:
              - action: light.turn_on
                data:
                  entity_id: light.esp32_node_s_led
                  effect: 'Color Wipe'
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.click_type == 'hold' or trigger.event.data.click_type == 'button_2_hold' }}"
            sequence:
              - action: light.turn_off
                entity_id: light.esp32_node_s_led
                data:
                  transition: 5
  
# ##################################
# Sasha - Main Light off with no occupancy for 1 hour
# ##################################
  - alias: sasha_light_off_with_occupancy
    id: sasha_light_off_with_occupancy
    initial_state: true
    mode: single
    max_exceeded: silent
    triggers:
      - trigger: state
        entity_id: binary_sensor.presence_s
        to: 'off'
        for: 
          minutes: 15
    conditions:
      - condition: state
        entity_id: group.lights_s
        state: 'on'
    actions:
      - action: light.turn_off
        entity_id: light.square_led_s, light.esp32_node_s_led, light.0x54ef441000d54c6c_light, light.0x54ef4410000ea59b_light, light.light_bar_front, light.light_bar_back
        data:
          transition: 15

# ##################################
# Sasha - Main Light Control with Alice
# ##################################
  - alias: sasha_main_light_control_with_alice
    id: sasha_main_light_control_with_alice
    mode: single
    max_exceeded: silent    
    initial_state: true
    triggers:
      - trigger: event
        event_type: yandex_intent
        event_data:
          text: Выключи свет в Сашиной комнате
        id: 'to_off_alice'
      - trigger: event
        event_type: yandex_intent
        event_data:
          text: Включи свет в Сашиной комнате
        id: 'to_on_alice'
    conditions:
      - condition: template
        value_template: "{{ states('light.square_led_s') in ['on','off'] }}"
      # - condition: template
      #   value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}"
    actions:
      - choose:
          - conditions:
              - condition: trigger
                id: 'to_off_alice'
            sequence:
              - action: light.turn_off
                entity_id: light.square_led_s
          - conditions:
              - condition: trigger
                id: 'to_on_alice'
            sequence:
              - action: light.turn_on
                entity_id: light.square_led_s
                data:
                  brightness: 230
                  color_temp_kelvin: 5000
                  
# ##################################
# Sasha - Light Bar Restart
# ##################################
  - alias: sasha_light_bar_restart
    id: sasha_light_bar_restart
    mode: single
    max_exceeded: silent    
    initial_state: true
    triggers:
      - trigger: time_pattern
        minutes: "/1"
      # - platform: state
      #   entity_id: light.bedside_mb
      #   to: 'unavailable'
      #   for:
      #     minutes: 2
      # - platform: numeric_state
      #   entity_id: sensor.ha_uptime
      #   above: 0
      #   below: 2
    conditions:
      - condition: state
        entity_id: light.light_bar_front
        state: 'unavailable'
        for:
          minutes: 2
      - condition: state
        entity_id: switch.system_light_bar_s_restart_key
        state: 'on'
      # - condition: template
      #   value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}"
      - condition: template
        value_template: >
          {% set ignore = ['unknown', 'unavailable', 'none'] %}
          {{ states('switch.sp111_socket_1_relay') not in ignore }}
    actions:
      - repeat:
          while:
            - condition: state
              entity_id: light.light_bar_front
              state: "unavailable"
            - condition: template
              value_template: "{{ repeat.index <= 5 }}"
          sequence:
            - action: switch.turn_off
              entity_id: switch.sp111_socket_1_relay
            - delay:
                seconds: 15
            - action: switch.turn_on
              entity_id: switch.sp111_socket_1_relay
            - action: notify.telegram
              data:
                message: "\U0001f6a8 Light Bar S restart done({{repeat.index}})!"
            - delay:
                seconds: 30
      - condition: state
        entity_id: light.light_bar_front
        state: 'unavailable'
      - action: notify.telegram
        data:
          message: "\U0001f6a8 Light Bar S restart unsuccessful!"
      - action: switch.turn_off
        entity_id: switch.system_light_bar_s_restart_key

# ##################################
# Sasha - Light Bar S Auto Restart Key Toggle
# ##################################
  - alias: sasha_light_bar_s_restart_key_toggle
    id: sasha_light_bar_s_restart_key_toggle
    initial_state: true
    mode: single
    max_exceeded: silent
    triggers:
      - trigger: state
        entity_id: light.light_bar_front
        from: 'unavailable'
    actions:
      - action: switch.turn_on
        entity_id: switch.system_light_bar_s_restart_key

# ##################################
# Sasha - Night Light Turn Off
# ##################################
  # - alias: sasha_main_night_light_turn_off
  #   id: sasha_main_night_light_turn_off
  #   initial_state: true
  #   triggers:
  #     - trigger: time
  #       at: '23:00:03'
  #   conditions:
  #     - condition: template
  #       value_template: "{{ states('light.s26_socket_1_night_s') in ['on','off'] }}"
  #     - condition: template
  #       value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}"
  #   actions:
  #     - action: light.turn_off
  #       entity_id: light.s26_socket_1_night_s

# # ##################################
# # Sasha - LED White S Restart
# # ##################################
#   - alias: sasha_led_white_restart
#     id: sasha_led_white_restart
#     initial_state: true
#     triggers:
#       - trigger: time_pattern
#         minutes: "/1"
#     conditions:
#       - condition: state
#         entity_id: light.led_white_s
#         state: "unavailable"
#         for:
#           minutes: 2
#       - condition: template
#         value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}"
#       - condition: state
#         entity_id: switch.system_led_white_s_restart_key
#         state: 'on'
#       - condition: template
#         value_template: >
#           {% set ignore = ['unknown', 'unavailable', 'none'] %}
#           {{ states('switch.0x00158d000358c773_plug') not in ignore }}        
#     actions:
#       - repeat:
#           while:
#             - condition: state
#               entity_id: light.led_white_s
#               state: "unavailable"
#             - condition: template
#               value_template: "{{ repeat.index <= 5 }}"
#           sequence:
#             - action: switch.turn_off
#               entity_id: switch.0x00158d000358c773_plug
#             - delay:
#                 seconds: 15
#             - action: switch.turn_on
#               entity_id: switch.0x00158d000358c773_plug
#             - action: notify.telegram
#               data:
#                 message: "\U0001f6a8 LED White S restart done({{repeat.index}})!"
#             - delay:
#                 seconds: 30
#       - condition: state
#         entity_id: light.led_white_s
#         state: 'unavailable'
#       - action: notify.telegram
#         data:
#           message: "\U0001f6a8 LED White S restart unsuccessful!"
#       - action: switch.turn_off
#         entity_id: switch.system_led_white_s_restart_key
  
# # ##################################
# # Sasha - LED White S Auto Restart Key Toggle
# # ##################################
#   - alias: sasha_led_white_restart_key_toggle
#     id: sasha_led_white_restart_key_toggle
#     initial_state: true
#     mode: single
#     max_exceeded: silent
#     triggers:
#       - trigger: state
#         entity_id: light.led_white_s
#         from: 'unavailable'
#     actions:
#       - action: switch.turn_on
#         entity_id: switch.system_led_white_s_restart_key

# # ##################################
# # Sasha - LED Color S Restart
# # ##################################
#   - alias: sasha_led_color_restart
#     id: sasha_led_color_restart
#     initial_state: true
#     triggers:
#       - trigger: time_pattern
#         minutes: "/1"
#     conditions:
#       - condition: state
#         entity_id: light.led_color_s
#         state: "unavailable"
#         for:
#           minutes: 2
#       - condition: template
#         value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}"
#       - condition: state
#         entity_id: switch.system_led_color_s_restart_key
#         state: 'on'
#       - condition: template
#         value_template: >
#           {% set ignore = ['unknown', 'unavailable', 'none'] %}
#           {{ states('switch.shp6_socket_1_relay') not in ignore }}        
#     actions:
#       - repeat:
#           while:
#             - condition: state
#               entity_id: light.led_color_s
#               state: "unavailable"
#             - condition: template
#               value_template: "{{ repeat.index <= 5 }}"
#           sequence:
#             - action: switch.turn_off
#               entity_id: switch.shp6_socket_1_relay
#             - delay:
#                 seconds: 15
#             - action: switch.turn_on
#               entity_id: switch.shp6_socket_1_relay
#             - action: notify.telegram
#               data:
#                 message: "\U0001f6a8 LED Color S restart done({{repeat.index}})!"
#             - delay:
#                 seconds: 30
#       - condition: state
#         entity_id: light.led_color_s
#         state: 'unavailable'
#       - action: notify.telegram
#         data:
#           message: "\U0001f6a8 LED Color S restart unsuccessful!"
#       - action: switch.turn_off
#         entity_id: switch.system_led_color_s_restart_key
  
# # ##################################
# # Sasha - LED White S Auto Restart Key Toggle
# # ##################################
#   - alias: sasha_led_color_restart_key_toggle
#     id: sasha_led_color_restart_key_toggle
#     initial_state: true
#     mode: single
#     max_exceeded: silent
#     triggers:
#       - trigger: state
#         entity_id: light.led_white_s
#         from: 'unavailable'
#     actions:
#       - action: switch.turn_on
#         entity_id: switch.system_led_white_s_restart_key
# #####################################################################################
#
# SASHA - breather
#
# #####################################################################################
# Sasha- breather auto co2
# ##################################
  - alias: sasha_breather_auto_co2
    id: sasha_breather_auto_co2
    initial_state: true
    triggers:
      - trigger: time_pattern
        minutes: '/3'
    conditions:
      - condition: state
        entity_id: switch.system_breather_auto_s
        state: 'on'
      - condition: not
        conditions:
          - condition: state
            entity_id: switch.system_breather_manual_s
            state: 'on'
    actions:
      - choose:
          - conditions:
              - condition: state
                entity_id: binary_sensor.0x00158d00025370d1_contact
                state: 'off'
              - condition: numeric_state
                entity_id: sensor.esp32_node_s_co2
                above: input_number.co2_high_limit
              - condition: state
                entity_id: binary_sensor.breather_s
                state: 'off'
              - condition: state
                entity_id: switch.system_security_mode
                state: 'off'
              - condition: numeric_state
                entity_id: sensor.0x00158d0001e6d85a_temperature
                above: 20
            sequence:
              - action: fan.turn_on
                entity_id: fan.breather_s
              - condition: numeric_state
                entity_id: sensor.esp32_node_s_co2
                above: input_number.co2_high_limit
              - condition: state
                entity_id: switch.system_breather_auto_speed_s
                state: 'on'
              - action: fan.set_percentage
                entity_id: fan.breather_s
                data:
                  percentage: "{{states('sensor.breather_set_speed_s')|int(0) }}"

          - conditions:
              - condition: state
                entity_id: binary_sensor.0x00158d00025370d1_contact
                state: 'off'
              - condition: numeric_state
                entity_id: sensor.esp32_node_s_co2
                above: input_number.co2_high_limit
              - condition: state
                entity_id: binary_sensor.breather_s
                state: 'on'
              - condition: state
                entity_id: switch.system_security_mode
                state: 'off'
              - condition: state
                entity_id: switch.system_breather_auto_speed_s
                state: 'on'
              - condition: numeric_state
                entity_id: sensor.breather_set_speed_s
                above: 0
            sequence:
              - action: fan.set_percentage
                entity_id: fan.breather_s
                data:
                  percentage: "{{states('sensor.breather_set_speed_s')|int(0) }}"

          - conditions:
              - or: 
                  - and: 
                      - condition: state
                        entity_id: binary_sensor.0x00158d00025370d1_contact
                        state: 'off'
                      - condition: numeric_state
                        entity_id: sensor.esp32_node_s_co2
                        below: input_number.co2_low_limit
                      - condition: state
                        entity_id: binary_sensor.breather_s
                        state: 'on'
                  - and:
                      - or: 
                          - condition: numeric_state
                            entity_id: sensor.0x00158d0001e6d85a_temperature
                            below: 20
                          - condition: state
                            entity_id: binary_sensor.0x00158d00025370d1_contact
                            state: 'on'
                      - condition: state
                        entity_id: binary_sensor.breather_s
                        state: 'on'
            sequence:
              - action: fan.turn_off
                entity_id: fan.breather_s

# ##################################
# Sasha - Breather Auto Timer
# ##################################
  - alias: sasha_breather_auto_timer
    id: sasha_breather_auto_timer
    mode: single
    max_exceeded: silent    
    initial_state: true
    triggers:
      - trigger: event
        event_type: yandex_intent
        event_data:
          text: Выключи вентиляцию
        id: 'to_off_alice'
      - trigger: event
        event_type: yandex_intent
        event_data:
          text: Включи вентиляцию
        id: 'to_on_alice'
      - trigger: time
        at: "21:00:00"
        id: 'time_trigger_night'
      - trigger: time
        at: "09:00:00"
        id: 'time_trigger_day'
    # conditions:
    #   - condition: template
    #     value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}"
    actions:
      - choose:
          - conditions: # choice 5
              - condition: trigger
                id: "to_off_alice"
            sequence:
              - condition: template
                value_template: "{{ trigger.event.data.entity_id == 'media_player.yandex_s' }}"

              - if:
                  - condition: state
                    entity_id: binary_sensor.breather_s
                    state: 'on'
                then:
                  - action: fan.turn_off
                    entity_id: fan.breather_s
                    
              # - action: timer.cancel
              #   entity_id: timer.breather_v

              - action: switch.turn_on
                entity_id: switch.system_breather_auto_s

          - conditions: # choice 6
              - condition: trigger
                id: 'to_on_alice'
            sequence:
              - condition: template
                value_template: "{{ trigger.event.data.entity_id == 'media_player.yandex_s' }}"

              - if:
                  - condition: state
                    entity_id: binary_sensor.breather_s
                    state: 'off'
                then:
                  - action: switch.turn_on
                    entity_id: switch.system_breather_manual_s
                  - action: fan.turn_on
                    entity_id: fan.breather_s

          - conditions: # choice 8
              - condition: trigger
                id: "time_trigger_night"
            sequence:
              - action: switch.turn_on
                entity_id: switch.system_breather_manual_s
              - action: fan.set_percentage
                entity_id: fan.breather_s
                data:
                  percentage: 25
                    
          - conditions: # choice 9
              - condition: trigger
                id: "time_trigger_day"
            sequence:
              - action: fan.turn_off
                entity_id: fan.breather_s

# ##################################
# Sasha - Breather Switches Interlock
# ##################################
  - alias: sasha_breather_switches_interlock
    id: sasha_breather_switches_interlock
    mode: single
    max_exceeded: silent
    initial_state: true
    triggers:
      - trigger: state
        entity_id:
          - switch.system_breather_auto_s
          - switch.system_breather_manual_s
    conditions: 
      - condition: template
        value_template: "{{ trigger.to_state.state == 'on' }}"
    #   - condition: template
    #     value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}"
    actions:
    - action: homeassistant.turn_off
      target:
        entity_id: >-
          {% if trigger.from_state.entity_id == 'switch.system_breather_auto_s' %}
          {{ 'switch.system_breather_manual_s' }}
          {% else %}
          {{ 'switch.system_breather_auto_s' }}
          {% endif %}

# ##################################
# Sasha - Breather Switches to default
# ##################################
  - alias: sasha_breather_switches_default
    id: sasha_breather_switches_default
    mode: single
    max_exceeded: silent
    initial_state: true
    triggers:
      - trigger: template
        value_template: "{{ is_state('switch.system_breather_auto_s','off') and
                            is_state('switch.system_breather_manual_s','off') }}"
    # conditions: 
    #   - condition: template
    #     value_template: "{{ is_state_attr(this.entity_id, 'current',0) }}"
    actions:
    - action: switch.turn_on
      entity_id: switch.system_breather_auto_s
# ##################################
# System - Breather Control Alice
# ##################################
#   - alias: system_breather_control_alice
#     id: system_breather_control_ alice
#     initial_state: true
#     mode: parallel
#     triggers:
#       - trigger: event
#         event_type: yandex_intent
#         event_data:
#           text: Выключи вентиляцию
#         id: 'off'
#       - trigger: event
#         event_type: yandex_intent
#         event_data:
#           text: Включи вентиляцию
#         id: 'on'
#     conditions:
#       - condition: state
#         entity_id: switch.system_security_mode
#         state: 'off'
#       - condition: template
#         value_template: "{{ trigger.event.data.entity_id != 'media_player.yandex_v' }}"
#     actions:
#       - choose:
#           - conditions:
#               - condition: template
#                 value_template: "{{ trigger.event.data.entity_id == 'media_player.yandex_mb' }}"
#             sequence:
#               - action: 'switch.turn_{{ trigger.id }}'
#                 entity_id: switch.system_breather_mb_last_toggle_by_user
#               - action: 'fan.turn_{{ trigger.id }}'
#                 entity_id: fan.breather_mb
#           - conditions:
#               - condition: template
#                 value_template: "{{ trigger.event.data.entity_id == 'media_player.yandex_s' }}"
#             sequence:
#               - action: 'switch.turn_{{ trigger.id }}'
#                 entity_id: switch.system_breather_s_last_toggle_by_user
#               - action: 'fan.turn_{{ trigger.id }}'
#                 entity_id: fan.breather_s

# ##################################
# System - Breather Control User
# ##################################
  - alias: system_breather_control_user
    id: system_breather_control_user
    initial_state: true
    mode: parallel
    triggers:
      - trigger: state
        entity_id: fan.breather_mb
        to: 'off'
        id: 'id_state_mb'
      - trigger: state
        entity_id: fan.breather_s
        to: 'off'
        id: 'id_state_s'
      # - platform: state
      #   entity_id: switch.system_breather_auto_mb, switch.system_breather_auto_v, switch.system_breather_auto_s
      #   to: 'on'
      #   id: 'id_state_auto_on'
    conditions:
      - condition: state
        entity_id: switch.system_security_mode
        state: 'off'
    actions:
      - choose:
          - conditions:
              - condition: trigger
                id: 'id_state_mb'
            sequence:
              - action: switch.turn_off
                entity_id: switch.system_breather_mb_last_toggle_by_user
          - conditions:
              - condition: trigger
                id: 'id_state_s'
            sequence:
              - action: switch.turn_off
                entity_id: switch.system_breather_s_last_toggle_by_user
          # - conditions:
          #     - condition: trigger
          #       id: 'id_state_auto_on'
          #   sequence:
          #     - action: 'switch.turn_{{ states("switch.system_breather_auto_s") }}'
          #       entity_id: switch.switch.system_breather_s_last_toggle_by_user
          #     - action: 'switch.turn_{{ states("switch.system_breather_auto_mb") }}'
          #       entity_id: switch.switch.system_breather_mb_last_toggle_by_user
          #     - action: 'switch.turn_{{ states("switch.system_breather_auto_v") }}'
          #       entity_id: switch.switch.system_breather_v_last_toggle_by_user
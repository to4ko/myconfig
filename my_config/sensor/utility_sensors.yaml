
  - platform: statistics
    unique_id: ms01a_daily_power_consumption
    name: ms01a Daily Power Consumption
    entity_id: sensor.ms01a_plug_hb_power
    state_characteristic: mean
    sampling_size: 900000
    max_age:
      hours: 24

  - platform: statistics
    unique_id: ms01b_daily_power_consumption
    name: ms01b Daily Power Consumption
    entity_id: sensor.ms01b_plug_hb_power
    state_characteristic: mean
    sampling_size: 900000
    max_age:
      hours: 24

  - platform: statistics
    unique_id: pbs100_daily_power_consumption
    name: pbs100 Daily Power Consumption
    entity_id: sensor.pbs100_plug_st_power
    state_characteristic: mean
    sampling_size: 900000
    max_age:
      hours: 24

  - platform: statistics
    unique_id: ds1621_daily_power_consupmtion
    name: Ds1621plus Daily Power Consumption
    entity_id: sensor.1621_plug_st_power
    state_characteristic: mean
    sampling_size: 900000
    max_age:
      hours: 24
      
  # - platform: statistics
  #   name: Ds220plus Daily Power Consumption
  #   entity_id: sensor.ds220plus_plug_hs_power
  #   state_characteristic: mean
  #   sampling_size: 900000
  #   max_age:
  #     hours: 24

  - platform: statistics
    unique_id: ds920plus_daily_power_consumption
    name: Ds920plus Daily Power Consumption
    entity_id: sensor.ds920plus_plug_mb_power
    state_characteristic: mean
    sampling_size: 900000
    max_age:
      hours: 24

  - platform: statistics
    unique_id: thermo_pad_daily_power_consumption
    name: Thermo Pad Hourly Power Consumption
    entity_id: sensor.0x00158d000392623d_power
    state_characteristic: mean
    sampling_size: 900000
    max_age:
      hours: 24

  # ############################################################################
  # Utility (water + Power Cost sensor
  # ############################################################################

  # - platform: min_max
  #   type: mean
  #   name: Voltage
  #   round_digits: 1
  #   entity_ids:
  #     - sensor.ippon_1200_input_voltage
  #     - sensor.ippon_1050_input_voltage
  #     - sensor.cyber650_input_voltage
  #     - sensor.shp2_socket_1_v
  #     - sensor.shp2_socket_2_v
  #     - sensor.shp6_socket_1_v
  #     - sensor.shp6_socket_2_v
  #     - sensor.sonoff_pow_r2_1_voltage
  #     - sensor.sonoff_pow_r2_2_voltage

  # ############################################################################
  # Breathers run time stat
  # ############################################################################
  - platform: history_stats
    name: Breather V Run Time Today
    entity_id: binary_sensor.breather_v
    state: "on"
    type: time
    end: "{{ now().replace(hour=0, minute=0, second=0) }}"
    duration:
      hours: 24

  - platform: history_stats
    name: Breather S Run Time Today
    entity_id: binary_sensor.breather_s
    state: "on"
    type: time
    end: "{{ now().replace(hour=0, minute=0, second=0) }}"
    duration:
      hours: 24

  - platform: history_stats
    name: Breather MB Run Time Today
    entity_id: binary_sensor.breather_mb
    state: "on"
    type: time
    end: "{{ now().replace(hour=0, minute=0, second=0) }}"
    duration:
      hours: 24

  # - platform: history_stats
  #   name: Washer B Run Time Yesterday
  #   entity_id: binary_sensor.washer_b
  #   state: "on"
  #   type: time
  #   end: "{{ now().replace(hour=0, minute=0, second=0) }}"
  #   duration:
  #     hours: 24

  - platform: history_stats
    name: PC S Stats
    entity_id: switch.pc_s
    state: "on"
    start: "{{ today_at('00:00') }}"
    end: "{{ now() }}"

  - platform: history_stats
    name: Phone S Stats
    entity_id: binary_sensor.pova_6_interactive
    state: "on"
    start: "{{ today_at('00:00') }}"
    end: "{{ now() }}"

  - platform: history_stats
    name: Phone S Stats During Lessons
    entity_id: binary_sensor.school_phone_while_lesson
    state: "on"
    start: "{{ today_at('00:00') }}"
    end: "{{ now() }}"    